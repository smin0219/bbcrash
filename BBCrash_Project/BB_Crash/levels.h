#pragma once

#using <mscorlib.dll>
#using <System.dll>
#using <System.Data.dll>
#using <System.Xml.dll>

using namespace System::Security::Permissions;
[assembly:SecurityPermissionAttribute(SecurityAction::RequestMinimum, SkipVerification=false)];
// 
// This source code was auto-generated by xsd, Version=4.6.1055.0.
// 
namespace BB_Crash {
    using namespace System;
    ref class level_data;
    
    
    /// <summary>
///Represents a strongly typed in-memory cache of data.
///</summary>
    [System::Serializable, 
    System::ComponentModel::DesignerCategoryAttribute(L"code"), 
    System::ComponentModel::ToolboxItem(true), 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedDataSetSchema"), 
    System::Xml::Serialization::XmlRootAttribute(L"level_data"), 
    System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.DataSet")]
    public ref class level_data : public ::System::Data::DataSet {
        public : ref class level_mapDataTable;
        public : ref class sprite_type_listDataTable;
        public : ref class sprite_typeDataTable;
        public : ref class sprites_listDataTable;
        public : ref class spriteDataTable;
        public : ref class spawning_poolsDataTable;
        public : ref class spawning_poolDataTable;
        public : ref class level_mapRow;
        public : ref class sprite_type_listRow;
        public : ref class sprite_typeRow;
        public : ref class sprites_listRow;
        public : ref class spriteRow;
        public : ref class spawning_poolsRow;
        public : ref class spawning_poolRow;
        public : ref class level_mapRowChangeEvent;
        public : ref class sprite_type_listRowChangeEvent;
        public : ref class sprite_typeRowChangeEvent;
        public : ref class sprites_listRowChangeEvent;
        public : ref class spriteRowChangeEvent;
        public : ref class spawning_poolsRowChangeEvent;
        public : ref class spawning_poolRowChangeEvent;
        
        private: BB_Crash::level_data::level_mapDataTable^  tablelevel_map;
        
        private: BB_Crash::level_data::sprite_type_listDataTable^  tablesprite_type_list;
        
        private: BB_Crash::level_data::sprite_typeDataTable^  tablesprite_type;
        
        private: BB_Crash::level_data::sprites_listDataTable^  tablesprites_list;
        
        private: BB_Crash::level_data::spriteDataTable^  tablesprite;
        
        private: BB_Crash::level_data::spawning_poolsDataTable^  tablespawning_pools;
        
        private: BB_Crash::level_data::spawning_poolDataTable^  tablespawning_pool;
        
        private: ::System::Data::DataRelation^  relationsprite_type_list_sprite_type;
        
        private: ::System::Data::DataRelation^  relationsprites_list_sprite;
        
        private: ::System::Data::DataRelation^  relationspawning_pools_spawning_pool;
        
        private: ::System::Data::SchemaSerializationMode _schemaSerializationMode;
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void level_mapRowChangeEventHandler(::System::Object^  sender, BB_Crash::level_data::level_mapRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void sprite_type_listRowChangeEventHandler(::System::Object^  sender, BB_Crash::level_data::sprite_type_listRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void sprite_typeRowChangeEventHandler(::System::Object^  sender, BB_Crash::level_data::sprite_typeRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void sprites_listRowChangeEventHandler(::System::Object^  sender, BB_Crash::level_data::sprites_listRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void spriteRowChangeEventHandler(::System::Object^  sender, BB_Crash::level_data::spriteRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void spawning_poolsRowChangeEventHandler(::System::Object^  sender, BB_Crash::level_data::spawning_poolsRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void spawning_poolRowChangeEventHandler(::System::Object^  sender, BB_Crash::level_data::spawning_poolRowChangeEvent^  e);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        level_data();
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        level_data(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property BB_Crash::level_data::level_mapDataTable^  level_map {
            BB_Crash::level_data::level_mapDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property BB_Crash::level_data::sprite_type_listDataTable^  sprite_type_list {
            BB_Crash::level_data::sprite_type_listDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property BB_Crash::level_data::sprite_typeDataTable^  sprite_type {
            BB_Crash::level_data::sprite_typeDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property BB_Crash::level_data::sprites_listDataTable^  sprites_list {
            BB_Crash::level_data::sprites_listDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property BB_Crash::level_data::spriteDataTable^  sprite {
            BB_Crash::level_data::spriteDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property BB_Crash::level_data::spawning_poolsDataTable^  spawning_pools {
            BB_Crash::level_data::spawning_poolsDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property BB_Crash::level_data::spawning_poolDataTable^  spawning_pool {
            BB_Crash::level_data::spawning_poolDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::BrowsableAttribute(true), 
        System::ComponentModel::DesignerSerializationVisibilityAttribute(::System::ComponentModel::DesignerSerializationVisibility::Visible)]
        virtual property ::System::Data::SchemaSerializationMode SchemaSerializationMode {
            ::System::Data::SchemaSerializationMode get() override;
            System::Void set(::System::Data::SchemaSerializationMode value) override;
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::DesignerSerializationVisibilityAttribute(::System::ComponentModel::DesignerSerializationVisibility::Hidden)]
        property ::System::Data::DataTableCollection^  Tables {
            ::System::Data::DataTableCollection^  get() new;
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::DesignerSerializationVisibilityAttribute(::System::ComponentModel::DesignerSerializationVisibility::Hidden)]
        property ::System::Data::DataRelationCollection^  Relations {
            ::System::Data::DataRelationCollection^  get() new;
        }
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void InitializeDerivedDataSet() override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataSet^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Boolean ShouldSerializeTables() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Boolean ShouldSerializeRelations() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void ReadXmlSerializable(::System::Xml::XmlReader^  reader) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Xml::Schema::XmlSchema^  GetSchemaSerializable() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars(::System::Boolean initTable);
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializelevel_map();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializesprite_type_list();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializesprite_type();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializesprites_list();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializesprite();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializespawning_pools();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializespawning_pool();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SchemaChanged(::System::Object^  sender, ::System::ComponentModel::CollectionChangeEventArgs^  e);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedDataSetSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class level_mapDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columndir;
            
            private: ::System::Data::DataColumn^  columntmx_file;
            
            private: ::System::Data::DataColumn^  columnlevel_map_text;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::level_mapRowChangeEventHandler^  level_mapRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::level_mapRowChangeEventHandler^  level_mapRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::level_mapRowChangeEventHandler^  level_mapRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::level_mapRowChangeEventHandler^  level_mapRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            level_mapDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            level_mapDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            level_mapDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  dirColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  tmx_fileColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  level_map_textColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::level_data::level_mapRow^  default [::System::Int32 ] {
                BB_Crash::level_data::level_mapRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Addlevel_mapRow(BB_Crash::level_data::level_mapRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::level_data::level_mapRow^  Addlevel_mapRow(System::String^  dir, System::String^  tmx_file, System::String^  level_map_text);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::level_data::level_mapRow^  Newlevel_mapRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Removelevel_mapRow(BB_Crash::level_data::level_mapRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class sprite_type_listDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnsprite_type_list_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::sprite_type_listRowChangeEventHandler^  sprite_type_listRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::sprite_type_listRowChangeEventHandler^  sprite_type_listRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::sprite_type_listRowChangeEventHandler^  sprite_type_listRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::sprite_type_listRowChangeEventHandler^  sprite_type_listRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprite_type_listDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprite_type_listDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprite_type_listDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  sprite_type_list_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::level_data::sprite_type_listRow^  default [::System::Int32 ] {
                BB_Crash::level_data::sprite_type_listRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Addsprite_type_listRow(BB_Crash::level_data::sprite_type_listRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::level_data::sprite_type_listRow^  Addsprite_type_listRow();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::level_data::sprite_type_listRow^  Newsprite_type_listRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Removesprite_type_listRow(BB_Crash::level_data::sprite_type_listRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class sprite_typeDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columndir;
            
            private: ::System::Data::DataColumn^  columnpst_file;
            
            private: ::System::Data::DataColumn^  columnsprite_type_text;
            
            private: ::System::Data::DataColumn^  columnsprite_type_list_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::sprite_typeRowChangeEventHandler^  sprite_typeRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::sprite_typeRowChangeEventHandler^  sprite_typeRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::sprite_typeRowChangeEventHandler^  sprite_typeRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::sprite_typeRowChangeEventHandler^  sprite_typeRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprite_typeDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprite_typeDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprite_typeDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  dirColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  pst_fileColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  sprite_type_textColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  sprite_type_list_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::level_data::sprite_typeRow^  default [::System::Int32 ] {
                BB_Crash::level_data::sprite_typeRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Addsprite_typeRow(BB_Crash::level_data::sprite_typeRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::level_data::sprite_typeRow^  Addsprite_typeRow(System::String^  dir, System::String^  pst_file, System::String^  sprite_type_text, 
                        BB_Crash::level_data::sprite_type_listRow^  parentsprite_type_listRowBysprite_type_list_sprite_type);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::level_data::sprite_typeRow^  Newsprite_typeRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Removesprite_typeRow(BB_Crash::level_data::sprite_typeRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class sprites_listDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnsprites_list_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::sprites_listRowChangeEventHandler^  sprites_listRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::sprites_listRowChangeEventHandler^  sprites_listRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::sprites_listRowChangeEventHandler^  sprites_listRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::sprites_listRowChangeEventHandler^  sprites_listRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprites_listDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprites_listDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprites_listDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  sprites_list_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::level_data::sprites_listRow^  default [::System::Int32 ] {
                BB_Crash::level_data::sprites_listRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Addsprites_listRow(BB_Crash::level_data::sprites_listRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::level_data::sprites_listRow^  Addsprites_listRow();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::level_data::sprites_listRow^  Newsprites_listRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Removesprites_listRow(BB_Crash::level_data::sprites_listRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class spriteDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columntype;
            
            private: ::System::Data::DataColumn^  columninitX;
            
            private: ::System::Data::DataColumn^  columninitY;
            
            private: ::System::Data::DataColumn^  columninitVx;
            
            private: ::System::Data::DataColumn^  columninitVy;
            
            private: ::System::Data::DataColumn^  columninitState;
            
            private: ::System::Data::DataColumn^  columnmovementBehavior;
            
            private: ::System::Data::DataColumn^  columndeathBehavior;
            
            private: ::System::Data::DataColumn^  columnsprite_text;
            
            private: ::System::Data::DataColumn^  columnsprites_list_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::spriteRowChangeEventHandler^  spriteRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::spriteRowChangeEventHandler^  spriteRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::spriteRowChangeEventHandler^  spriteRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::spriteRowChangeEventHandler^  spriteRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spriteDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spriteDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spriteDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  typeColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  initXColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  initYColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  initVxColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  initVyColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  initStateColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  movementBehaviorColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  deathBehaviorColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  sprite_textColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  sprites_list_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::level_data::spriteRow^  default [::System::Int32 ] {
                BB_Crash::level_data::spriteRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddspriteRow(BB_Crash::level_data::spriteRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::level_data::spriteRow^  AddspriteRow(
                        System::String^  type, 
                        System::Int16 initX, 
                        System::Int16 initY, 
                        System::SByte initVx, 
                        System::SByte initVy, 
                        System::String^  initState, 
                        System::String^  movementBehavior, 
                        System::String^  deathBehavior, 
                        System::String^  sprite_text, 
                        BB_Crash::level_data::sprites_listRow^  parentsprites_listRowBysprites_list_sprite);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::level_data::spriteRow^  NewspriteRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemovespriteRow(BB_Crash::level_data::spriteRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class spawning_poolsDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnspawning_pools_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::spawning_poolsRowChangeEventHandler^  spawning_poolsRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::spawning_poolsRowChangeEventHandler^  spawning_poolsRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::spawning_poolsRowChangeEventHandler^  spawning_poolsRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::spawning_poolsRowChangeEventHandler^  spawning_poolsRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spawning_poolsDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spawning_poolsDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spawning_poolsDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  spawning_pools_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::level_data::spawning_poolsRow^  default [::System::Int32 ] {
                BB_Crash::level_data::spawning_poolsRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Addspawning_poolsRow(BB_Crash::level_data::spawning_poolsRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::level_data::spawning_poolsRow^  Addspawning_poolsRow();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::level_data::spawning_poolsRow^  Newspawning_poolsRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Removespawning_poolsRow(BB_Crash::level_data::spawning_poolsRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class spawning_poolDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnx;
            
            private: ::System::Data::DataColumn^  columny;
            
            private: ::System::Data::DataColumn^  columnsprite_type;
            
            private: ::System::Data::DataColumn^  columnintervalTime;
            
            private: ::System::Data::DataColumn^  columnintervalType;
            
            private: ::System::Data::DataColumn^  columnmovementBehavior;
            
            private: ::System::Data::DataColumn^  columndeathBehavior;
            
            private: ::System::Data::DataColumn^  columnspawning_pool_text;
            
            private: ::System::Data::DataColumn^  columnspawning_pools_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::spawning_poolRowChangeEventHandler^  spawning_poolRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::spawning_poolRowChangeEventHandler^  spawning_poolRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::spawning_poolRowChangeEventHandler^  spawning_poolRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::level_data::spawning_poolRowChangeEventHandler^  spawning_poolRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spawning_poolDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spawning_poolDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spawning_poolDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  xColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  yColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  sprite_typeColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  intervalTimeColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  intervalTypeColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  movementBehaviorColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  deathBehaviorColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  spawning_pool_textColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  spawning_pools_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::level_data::spawning_poolRow^  default [::System::Int32 ] {
                BB_Crash::level_data::spawning_poolRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Addspawning_poolRow(BB_Crash::level_data::spawning_poolRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::level_data::spawning_poolRow^  Addspawning_poolRow(
                        System::Int16 x, 
                        System::Int16 y, 
                        System::String^  sprite_type, 
                        System::SByte intervalTime, 
                        System::String^  intervalType, 
                        System::String^  movementBehavior, 
                        System::String^  deathBehavior, 
                        System::String^  spawning_pool_text, 
                        BB_Crash::level_data::spawning_poolsRow^  parentspawning_poolsRowByspawning_pools_spawning_pool);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::level_data::spawning_poolRow^  Newspawning_poolRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Removespawning_poolRow(BB_Crash::level_data::spawning_poolRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class level_mapRow : public ::System::Data::DataRow {
            
            private: BB_Crash::level_data::level_mapDataTable^  tablelevel_map;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            level_mapRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  dir {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  tmx_file {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  level_map_text {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsdirNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetdirNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Istmx_fileNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Settmx_fileNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class sprite_type_listRow : public ::System::Data::DataRow {
            
            private: BB_Crash::level_data::sprite_type_listDataTable^  tablesprite_type_list;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprite_type_listRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 sprite_type_list_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< BB_Crash::level_data::sprite_typeRow^  >^  Getsprite_typeRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class sprite_typeRow : public ::System::Data::DataRow {
            
            private: BB_Crash::level_data::sprite_typeDataTable^  tablesprite_type;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprite_typeRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  dir {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  pst_file {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  sprite_type_text {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 sprite_type_list_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::level_data::sprite_type_listRow^  sprite_type_listRow {
                BB_Crash::level_data::sprite_type_listRow^  get();
                System::Void set(BB_Crash::level_data::sprite_type_listRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsdirNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetdirNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Ispst_fileNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Setpst_fileNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Issprite_type_list_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Setsprite_type_list_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class sprites_listRow : public ::System::Data::DataRow {
            
            private: BB_Crash::level_data::sprites_listDataTable^  tablesprites_list;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprites_listRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 sprites_list_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< BB_Crash::level_data::spriteRow^  >^  GetspriteRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class spriteRow : public ::System::Data::DataRow {
            
            private: BB_Crash::level_data::spriteDataTable^  tablesprite;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spriteRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  type {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int16 initX {
                System::Int16 get();
                System::Void set(System::Int16 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int16 initY {
                System::Int16 get();
                System::Void set(System::Int16 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::SByte initVx {
                System::SByte get();
                System::Void set(System::SByte value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::SByte initVy {
                System::SByte get();
                System::Void set(System::SByte value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  initState {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  movementBehavior {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  deathBehavior {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  sprite_text {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 sprites_list_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::level_data::sprites_listRow^  sprites_listRow {
                BB_Crash::level_data::sprites_listRow^  get();
                System::Void set(BB_Crash::level_data::sprites_listRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IstypeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SettypeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsinitXNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetinitXNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsinitYNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetinitYNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsinitVxNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetinitVxNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsinitVyNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetinitVyNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsinitStateNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetinitStateNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsmovementBehaviorNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetmovementBehaviorNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsdeathBehaviorNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetdeathBehaviorNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Issprites_list_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Setsprites_list_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class spawning_poolsRow : public ::System::Data::DataRow {
            
            private: BB_Crash::level_data::spawning_poolsDataTable^  tablespawning_pools;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spawning_poolsRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 spawning_pools_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< BB_Crash::level_data::spawning_poolRow^  >^  Getspawning_poolRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class spawning_poolRow : public ::System::Data::DataRow {
            
            private: BB_Crash::level_data::spawning_poolDataTable^  tablespawning_pool;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spawning_poolRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int16 x {
                System::Int16 get();
                System::Void set(System::Int16 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int16 y {
                System::Int16 get();
                System::Void set(System::Int16 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  sprite_type {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::SByte intervalTime {
                System::SByte get();
                System::Void set(System::SByte value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  intervalType {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  movementBehavior {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  deathBehavior {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  spawning_pool_text {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 spawning_pools_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::level_data::spawning_poolsRow^  spawning_poolsRow {
                BB_Crash::level_data::spawning_poolsRow^  get();
                System::Void set(BB_Crash::level_data::spawning_poolsRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsxNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetxNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsyNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetyNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Issprite_typeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Setsprite_typeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsintervalTimeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetintervalTimeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsintervalTypeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetintervalTypeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsmovementBehaviorNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetmovementBehaviorNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsdeathBehaviorNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetdeathBehaviorNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Isspawning_pools_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Setspawning_pools_IdNull();
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class level_mapRowChangeEvent : public ::System::EventArgs {
            
            private: BB_Crash::level_data::level_mapRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            level_mapRowChangeEvent(BB_Crash::level_data::level_mapRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::level_data::level_mapRow^  Row {
                BB_Crash::level_data::level_mapRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class sprite_type_listRowChangeEvent : public ::System::EventArgs {
            
            private: BB_Crash::level_data::sprite_type_listRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprite_type_listRowChangeEvent(BB_Crash::level_data::sprite_type_listRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::level_data::sprite_type_listRow^  Row {
                BB_Crash::level_data::sprite_type_listRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class sprite_typeRowChangeEvent : public ::System::EventArgs {
            
            private: BB_Crash::level_data::sprite_typeRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprite_typeRowChangeEvent(BB_Crash::level_data::sprite_typeRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::level_data::sprite_typeRow^  Row {
                BB_Crash::level_data::sprite_typeRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class sprites_listRowChangeEvent : public ::System::EventArgs {
            
            private: BB_Crash::level_data::sprites_listRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprites_listRowChangeEvent(BB_Crash::level_data::sprites_listRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::level_data::sprites_listRow^  Row {
                BB_Crash::level_data::sprites_listRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class spriteRowChangeEvent : public ::System::EventArgs {
            
            private: BB_Crash::level_data::spriteRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spriteRowChangeEvent(BB_Crash::level_data::spriteRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::level_data::spriteRow^  Row {
                BB_Crash::level_data::spriteRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class spawning_poolsRowChangeEvent : public ::System::EventArgs {
            
            private: BB_Crash::level_data::spawning_poolsRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spawning_poolsRowChangeEvent(BB_Crash::level_data::spawning_poolsRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::level_data::spawning_poolsRow^  Row {
                BB_Crash::level_data::spawning_poolsRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class spawning_poolRowChangeEvent : public ::System::EventArgs {
            
            private: BB_Crash::level_data::spawning_poolRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spawning_poolRowChangeEvent(BB_Crash::level_data::spawning_poolRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::level_data::spawning_poolRow^  Row {
                BB_Crash::level_data::spawning_poolRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
    };
}
namespace BB_Crash {
    
    
    inline level_data::level_data() {
        this->BeginInit();
        this->InitClass();
        ::System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler = gcnew ::System::ComponentModel::CollectionChangeEventHandler(this, &BB_Crash::level_data::SchemaChanged);
        __super::Tables->CollectionChanged += schemaChangedHandler;
        __super::Relations->CollectionChanged += schemaChangedHandler;
        this->EndInit();
    }
    
    inline level_data::level_data(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataSet(info, context, false) {
        if (this->IsBinarySerialized(info, context) == true) {
            this->InitVars(false);
            ::System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler1 = gcnew ::System::ComponentModel::CollectionChangeEventHandler(this, &BB_Crash::level_data::SchemaChanged);
            this->Tables->CollectionChanged += schemaChangedHandler1;
            this->Relations->CollectionChanged += schemaChangedHandler1;
            return;
        }
        ::System::String^  strSchema = (cli::safe_cast<::System::String^  >(info->GetValue(L"XmlSchema", ::System::String::typeid)));
        if (this->DetermineSchemaSerializationMode(info, context) == ::System::Data::SchemaSerializationMode::IncludeSchema) {
            ::System::Data::DataSet^  ds = (gcnew ::System::Data::DataSet());
            ds->ReadXmlSchema((gcnew ::System::Xml::XmlTextReader((gcnew ::System::IO::StringReader(strSchema)))));
            if (ds->Tables[L"level_map"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::level_data::level_mapDataTable(ds->Tables[L"level_map"])));
            }
            if (ds->Tables[L"sprite_type_list"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::level_data::sprite_type_listDataTable(ds->Tables[L"sprite_type_list"])));
            }
            if (ds->Tables[L"sprite_type"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::level_data::sprite_typeDataTable(ds->Tables[L"sprite_type"])));
            }
            if (ds->Tables[L"sprites_list"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::level_data::sprites_listDataTable(ds->Tables[L"sprites_list"])));
            }
            if (ds->Tables[L"sprite"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::level_data::spriteDataTable(ds->Tables[L"sprite"])));
            }
            if (ds->Tables[L"spawning_pools"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::level_data::spawning_poolsDataTable(ds->Tables[L"spawning_pools"])));
            }
            if (ds->Tables[L"spawning_pool"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::level_data::spawning_poolDataTable(ds->Tables[L"spawning_pool"])));
            }
            this->DataSetName = ds->DataSetName;
            this->Prefix = ds->Prefix;
            this->Namespace = ds->Namespace;
            this->Locale = ds->Locale;
            this->CaseSensitive = ds->CaseSensitive;
            this->EnforceConstraints = ds->EnforceConstraints;
            this->Merge(ds, false, ::System::Data::MissingSchemaAction::Add);
            this->InitVars();
        }
        else {
            this->ReadXmlSchema((gcnew ::System::Xml::XmlTextReader((gcnew ::System::IO::StringReader(strSchema)))));
        }
        this->GetSerializationData(info, context);
        ::System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler = gcnew ::System::ComponentModel::CollectionChangeEventHandler(this, &BB_Crash::level_data::SchemaChanged);
        __super::Tables->CollectionChanged += schemaChangedHandler;
        this->Relations->CollectionChanged += schemaChangedHandler;
    }
    
    inline BB_Crash::level_data::level_mapDataTable^  level_data::level_map::get() {
        return this->tablelevel_map;
    }
    
    inline BB_Crash::level_data::sprite_type_listDataTable^  level_data::sprite_type_list::get() {
        return this->tablesprite_type_list;
    }
    
    inline BB_Crash::level_data::sprite_typeDataTable^  level_data::sprite_type::get() {
        return this->tablesprite_type;
    }
    
    inline BB_Crash::level_data::sprites_listDataTable^  level_data::sprites_list::get() {
        return this->tablesprites_list;
    }
    
    inline BB_Crash::level_data::spriteDataTable^  level_data::sprite::get() {
        return this->tablesprite;
    }
    
    inline BB_Crash::level_data::spawning_poolsDataTable^  level_data::spawning_pools::get() {
        return this->tablespawning_pools;
    }
    
    inline BB_Crash::level_data::spawning_poolDataTable^  level_data::spawning_pool::get() {
        return this->tablespawning_pool;
    }
    
    inline ::System::Data::SchemaSerializationMode level_data::SchemaSerializationMode::get() {
        return this->_schemaSerializationMode;
    }
    inline System::Void level_data::SchemaSerializationMode::set(::System::Data::SchemaSerializationMode value) {
        this->_schemaSerializationMode = __identifier(value);
    }
    
    inline ::System::Data::DataTableCollection^  level_data::Tables::get() {
        return __super::Tables;
    }
    
    inline ::System::Data::DataRelationCollection^  level_data::Relations::get() {
        return __super::Relations;
    }
    
    inline ::System::Void level_data::InitializeDerivedDataSet() {
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline ::System::Data::DataSet^  level_data::Clone() {
        BB_Crash::level_data^  cln = (cli::safe_cast<BB_Crash::level_data^  >(__super::Clone()));
        cln->InitVars();
        cln->SchemaSerializationMode = this->SchemaSerializationMode;
        return cln;
    }
    
    inline ::System::Boolean level_data::ShouldSerializeTables() {
        return false;
    }
    
    inline ::System::Boolean level_data::ShouldSerializeRelations() {
        return false;
    }
    
    inline ::System::Void level_data::ReadXmlSerializable(::System::Xml::XmlReader^  reader) {
        if (this->DetermineSchemaSerializationMode(reader) == ::System::Data::SchemaSerializationMode::IncludeSchema) {
            this->Reset();
            ::System::Data::DataSet^  ds = (gcnew ::System::Data::DataSet());
            ds->ReadXml(reader);
            if (ds->Tables[L"level_map"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::level_data::level_mapDataTable(ds->Tables[L"level_map"])));
            }
            if (ds->Tables[L"sprite_type_list"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::level_data::sprite_type_listDataTable(ds->Tables[L"sprite_type_list"])));
            }
            if (ds->Tables[L"sprite_type"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::level_data::sprite_typeDataTable(ds->Tables[L"sprite_type"])));
            }
            if (ds->Tables[L"sprites_list"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::level_data::sprites_listDataTable(ds->Tables[L"sprites_list"])));
            }
            if (ds->Tables[L"sprite"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::level_data::spriteDataTable(ds->Tables[L"sprite"])));
            }
            if (ds->Tables[L"spawning_pools"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::level_data::spawning_poolsDataTable(ds->Tables[L"spawning_pools"])));
            }
            if (ds->Tables[L"spawning_pool"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::level_data::spawning_poolDataTable(ds->Tables[L"spawning_pool"])));
            }
            this->DataSetName = ds->DataSetName;
            this->Prefix = ds->Prefix;
            this->Namespace = ds->Namespace;
            this->Locale = ds->Locale;
            this->CaseSensitive = ds->CaseSensitive;
            this->EnforceConstraints = ds->EnforceConstraints;
            this->Merge(ds, false, ::System::Data::MissingSchemaAction::Add);
            this->InitVars();
        }
        else {
            this->ReadXml(reader);
            this->InitVars();
        }
    }
    
    inline ::System::Xml::Schema::XmlSchema^  level_data::GetSchemaSerializable() {
        ::System::IO::MemoryStream^  stream = (gcnew ::System::IO::MemoryStream());
        this->WriteXmlSchema((gcnew ::System::Xml::XmlTextWriter(stream, nullptr)));
        stream->Position = 0;
        return ::System::Xml::Schema::XmlSchema::Read((gcnew ::System::Xml::XmlTextReader(stream)), nullptr);
    }
    
    inline ::System::Void level_data::InitVars() {
        this->InitVars(true);
    }
    
    inline ::System::Void level_data::InitVars(::System::Boolean initTable) {
        this->tablelevel_map = (cli::safe_cast<BB_Crash::level_data::level_mapDataTable^  >(__super::Tables[L"level_map"]));
        if (initTable == true) {
            if (this->tablelevel_map != nullptr) {
                this->tablelevel_map->InitVars();
            }
        }
        this->tablesprite_type_list = (cli::safe_cast<BB_Crash::level_data::sprite_type_listDataTable^  >(__super::Tables[L"sprite_type_list"]));
        if (initTable == true) {
            if (this->tablesprite_type_list != nullptr) {
                this->tablesprite_type_list->InitVars();
            }
        }
        this->tablesprite_type = (cli::safe_cast<BB_Crash::level_data::sprite_typeDataTable^  >(__super::Tables[L"sprite_type"]));
        if (initTable == true) {
            if (this->tablesprite_type != nullptr) {
                this->tablesprite_type->InitVars();
            }
        }
        this->tablesprites_list = (cli::safe_cast<BB_Crash::level_data::sprites_listDataTable^  >(__super::Tables[L"sprites_list"]));
        if (initTable == true) {
            if (this->tablesprites_list != nullptr) {
                this->tablesprites_list->InitVars();
            }
        }
        this->tablesprite = (cli::safe_cast<BB_Crash::level_data::spriteDataTable^  >(__super::Tables[L"sprite"]));
        if (initTable == true) {
            if (this->tablesprite != nullptr) {
                this->tablesprite->InitVars();
            }
        }
        this->tablespawning_pools = (cli::safe_cast<BB_Crash::level_data::spawning_poolsDataTable^  >(__super::Tables[L"spawning_pools"]));
        if (initTable == true) {
            if (this->tablespawning_pools != nullptr) {
                this->tablespawning_pools->InitVars();
            }
        }
        this->tablespawning_pool = (cli::safe_cast<BB_Crash::level_data::spawning_poolDataTable^  >(__super::Tables[L"spawning_pool"]));
        if (initTable == true) {
            if (this->tablespawning_pool != nullptr) {
                this->tablespawning_pool->InitVars();
            }
        }
        this->relationsprite_type_list_sprite_type = this->Relations[L"sprite_type_list_sprite_type"];
        this->relationsprites_list_sprite = this->Relations[L"sprites_list_sprite"];
        this->relationspawning_pools_spawning_pool = this->Relations[L"spawning_pools_spawning_pool"];
    }
    
    inline ::System::Void level_data::InitClass() {
        this->DataSetName = L"level_data";
        this->Prefix = L"";
        this->EnforceConstraints = true;
        this->SchemaSerializationMode = ::System::Data::SchemaSerializationMode::IncludeSchema;
        this->tablelevel_map = (gcnew BB_Crash::level_data::level_mapDataTable());
        __super::Tables->Add(this->tablelevel_map);
        this->tablesprite_type_list = (gcnew BB_Crash::level_data::sprite_type_listDataTable());
        __super::Tables->Add(this->tablesprite_type_list);
        this->tablesprite_type = (gcnew BB_Crash::level_data::sprite_typeDataTable());
        __super::Tables->Add(this->tablesprite_type);
        this->tablesprites_list = (gcnew BB_Crash::level_data::sprites_listDataTable());
        __super::Tables->Add(this->tablesprites_list);
        this->tablesprite = (gcnew BB_Crash::level_data::spriteDataTable());
        __super::Tables->Add(this->tablesprite);
        this->tablespawning_pools = (gcnew BB_Crash::level_data::spawning_poolsDataTable());
        __super::Tables->Add(this->tablespawning_pools);
        this->tablespawning_pool = (gcnew BB_Crash::level_data::spawning_poolDataTable());
        __super::Tables->Add(this->tablespawning_pool);
        ::System::Data::ForeignKeyConstraint^  fkc;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"sprite_type_list_sprite_type", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablesprite_type_list->sprite_type_list_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablesprite_type->sprite_type_list_IdColumn}));
        this->tablesprite_type->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"sprites_list_sprite", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablesprites_list->sprites_list_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablesprite->sprites_list_IdColumn}));
        this->tablesprite->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"spawning_pools_spawning_pool", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablespawning_pools->spawning_pools_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablespawning_pool->spawning_pools_IdColumn}));
        this->tablespawning_pool->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        this->relationsprite_type_list_sprite_type = (gcnew ::System::Data::DataRelation(L"sprite_type_list_sprite_type", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablesprite_type_list->sprite_type_list_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablesprite_type->sprite_type_list_IdColumn}, false));
        this->relationsprite_type_list_sprite_type->Nested = true;
        this->Relations->Add(this->relationsprite_type_list_sprite_type);
        this->relationsprites_list_sprite = (gcnew ::System::Data::DataRelation(L"sprites_list_sprite", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablesprites_list->sprites_list_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablesprite->sprites_list_IdColumn}, false));
        this->relationsprites_list_sprite->Nested = true;
        this->Relations->Add(this->relationsprites_list_sprite);
        this->relationspawning_pools_spawning_pool = (gcnew ::System::Data::DataRelation(L"spawning_pools_spawning_pool", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablespawning_pools->spawning_pools_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablespawning_pool->spawning_pools_IdColumn}, false));
        this->relationspawning_pools_spawning_pool->Nested = true;
        this->Relations->Add(this->relationspawning_pools_spawning_pool);
    }
    
    inline ::System::Boolean level_data::ShouldSerializelevel_map() {
        return false;
    }
    
    inline ::System::Boolean level_data::ShouldSerializesprite_type_list() {
        return false;
    }
    
    inline ::System::Boolean level_data::ShouldSerializesprite_type() {
        return false;
    }
    
    inline ::System::Boolean level_data::ShouldSerializesprites_list() {
        return false;
    }
    
    inline ::System::Boolean level_data::ShouldSerializesprite() {
        return false;
    }
    
    inline ::System::Boolean level_data::ShouldSerializespawning_pools() {
        return false;
    }
    
    inline ::System::Boolean level_data::ShouldSerializespawning_pool() {
        return false;
    }
    
    inline ::System::Void level_data::SchemaChanged(::System::Object^  sender, ::System::ComponentModel::CollectionChangeEventArgs^  e) {
        if (e->Action == ::System::ComponentModel::CollectionChangeAction::Remove) {
            this->InitVars();
        }
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  level_data::GetTypedDataSetSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        BB_Crash::level_data^  ds = (gcnew BB_Crash::level_data());
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        ::System::Xml::Schema::XmlSchemaAny^  any = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any->Namespace = ds->Namespace;
        sequence->Items->Add(any);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline level_data::level_mapDataTable::level_mapDataTable() {
        this->TableName = L"level_map";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline level_data::level_mapDataTable::level_mapDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline level_data::level_mapDataTable::level_mapDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  level_data::level_mapDataTable::dirColumn::get() {
        return this->columndir;
    }
    
    inline ::System::Data::DataColumn^  level_data::level_mapDataTable::tmx_fileColumn::get() {
        return this->columntmx_file;
    }
    
    inline ::System::Data::DataColumn^  level_data::level_mapDataTable::level_map_textColumn::get() {
        return this->columnlevel_map_text;
    }
    
    inline ::System::Int32 level_data::level_mapDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline BB_Crash::level_data::level_mapRow^  level_data::level_mapDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<BB_Crash::level_data::level_mapRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void level_data::level_mapDataTable::Addlevel_mapRow(BB_Crash::level_data::level_mapRow^  row) {
        this->Rows->Add(row);
    }
    
    inline BB_Crash::level_data::level_mapRow^  level_data::level_mapDataTable::Addlevel_mapRow(System::String^  dir, System::String^  tmx_file, 
                System::String^  level_map_text) {
        BB_Crash::level_data::level_mapRow^  rowlevel_mapRow = (cli::safe_cast<BB_Crash::level_data::level_mapRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {dir, tmx_file, level_map_text};
        rowlevel_mapRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowlevel_mapRow);
        return rowlevel_mapRow;
    }
    
    inline ::System::Collections::IEnumerator^  level_data::level_mapDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  level_data::level_mapDataTable::Clone() {
        BB_Crash::level_data::level_mapDataTable^  cln = (cli::safe_cast<BB_Crash::level_data::level_mapDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  level_data::level_mapDataTable::CreateInstance() {
        return (gcnew BB_Crash::level_data::level_mapDataTable());
    }
    
    inline ::System::Void level_data::level_mapDataTable::InitVars() {
        this->columndir = __super::Columns[L"dir"];
        this->columntmx_file = __super::Columns[L"tmx_file"];
        this->columnlevel_map_text = __super::Columns[L"level_map_text"];
    }
    
    inline ::System::Void level_data::level_mapDataTable::InitClass() {
        this->columndir = (gcnew ::System::Data::DataColumn(L"dir", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columndir);
        this->columntmx_file = (gcnew ::System::Data::DataColumn(L"tmx_file", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columntmx_file);
        this->columnlevel_map_text = (gcnew ::System::Data::DataColumn(L"level_map_text", ::System::String::typeid, nullptr, ::System::Data::MappingType::SimpleContent));
        __super::Columns->Add(this->columnlevel_map_text);
        this->columndir->Namespace = L"";
        this->columntmx_file->Namespace = L"";
        this->columnlevel_map_text->AllowDBNull = false;
    }
    
    inline BB_Crash::level_data::level_mapRow^  level_data::level_mapDataTable::Newlevel_mapRow() {
        return (cli::safe_cast<BB_Crash::level_data::level_mapRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  level_data::level_mapDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew BB_Crash::level_data::level_mapRow(builder));
    }
    
    inline ::System::Type^  level_data::level_mapDataTable::GetRowType() {
        return BB_Crash::level_data::level_mapRow::typeid;
    }
    
    inline ::System::Void level_data::level_mapDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->level_mapRowChanged(this, (gcnew BB_Crash::level_data::level_mapRowChangeEvent((cli::safe_cast<BB_Crash::level_data::level_mapRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::level_mapDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->level_mapRowChanging(this, (gcnew BB_Crash::level_data::level_mapRowChangeEvent((cli::safe_cast<BB_Crash::level_data::level_mapRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::level_mapDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->level_mapRowDeleted(this, (gcnew BB_Crash::level_data::level_mapRowChangeEvent((cli::safe_cast<BB_Crash::level_data::level_mapRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::level_mapDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->level_mapRowDeleting(this, (gcnew BB_Crash::level_data::level_mapRowChangeEvent((cli::safe_cast<BB_Crash::level_data::level_mapRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::level_mapDataTable::Removelevel_mapRow(BB_Crash::level_data::level_mapRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  level_data::level_mapDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        BB_Crash::level_data^  ds = (gcnew BB_Crash::level_data());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"level_mapDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline level_data::sprite_type_listDataTable::sprite_type_listDataTable() {
        this->TableName = L"sprite_type_list";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline level_data::sprite_type_listDataTable::sprite_type_listDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline level_data::sprite_type_listDataTable::sprite_type_listDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  level_data::sprite_type_listDataTable::sprite_type_list_IdColumn::get() {
        return this->columnsprite_type_list_Id;
    }
    
    inline ::System::Int32 level_data::sprite_type_listDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline BB_Crash::level_data::sprite_type_listRow^  level_data::sprite_type_listDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<BB_Crash::level_data::sprite_type_listRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void level_data::sprite_type_listDataTable::Addsprite_type_listRow(BB_Crash::level_data::sprite_type_listRow^  row) {
        this->Rows->Add(row);
    }
    
    inline BB_Crash::level_data::sprite_type_listRow^  level_data::sprite_type_listDataTable::Addsprite_type_listRow() {
        BB_Crash::level_data::sprite_type_listRow^  rowsprite_type_listRow = (cli::safe_cast<BB_Crash::level_data::sprite_type_listRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(1) {nullptr};
        rowsprite_type_listRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowsprite_type_listRow);
        return rowsprite_type_listRow;
    }
    
    inline ::System::Collections::IEnumerator^  level_data::sprite_type_listDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  level_data::sprite_type_listDataTable::Clone() {
        BB_Crash::level_data::sprite_type_listDataTable^  cln = (cli::safe_cast<BB_Crash::level_data::sprite_type_listDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  level_data::sprite_type_listDataTable::CreateInstance() {
        return (gcnew BB_Crash::level_data::sprite_type_listDataTable());
    }
    
    inline ::System::Void level_data::sprite_type_listDataTable::InitVars() {
        this->columnsprite_type_list_Id = __super::Columns[L"sprite_type_list_Id"];
    }
    
    inline ::System::Void level_data::sprite_type_listDataTable::InitClass() {
        this->columnsprite_type_list_Id = (gcnew ::System::Data::DataColumn(L"sprite_type_list_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnsprite_type_list_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnsprite_type_list_Id}, 
                true)));
        this->columnsprite_type_list_Id->AutoIncrement = true;
        this->columnsprite_type_list_Id->AllowDBNull = false;
        this->columnsprite_type_list_Id->Unique = true;
    }
    
    inline BB_Crash::level_data::sprite_type_listRow^  level_data::sprite_type_listDataTable::Newsprite_type_listRow() {
        return (cli::safe_cast<BB_Crash::level_data::sprite_type_listRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  level_data::sprite_type_listDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew BB_Crash::level_data::sprite_type_listRow(builder));
    }
    
    inline ::System::Type^  level_data::sprite_type_listDataTable::GetRowType() {
        return BB_Crash::level_data::sprite_type_listRow::typeid;
    }
    
    inline ::System::Void level_data::sprite_type_listDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->sprite_type_listRowChanged(this, (gcnew BB_Crash::level_data::sprite_type_listRowChangeEvent((cli::safe_cast<BB_Crash::level_data::sprite_type_listRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::sprite_type_listDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->sprite_type_listRowChanging(this, (gcnew BB_Crash::level_data::sprite_type_listRowChangeEvent((cli::safe_cast<BB_Crash::level_data::sprite_type_listRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::sprite_type_listDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->sprite_type_listRowDeleted(this, (gcnew BB_Crash::level_data::sprite_type_listRowChangeEvent((cli::safe_cast<BB_Crash::level_data::sprite_type_listRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::sprite_type_listDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->sprite_type_listRowDeleting(this, (gcnew BB_Crash::level_data::sprite_type_listRowChangeEvent((cli::safe_cast<BB_Crash::level_data::sprite_type_listRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::sprite_type_listDataTable::Removesprite_type_listRow(BB_Crash::level_data::sprite_type_listRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  level_data::sprite_type_listDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        BB_Crash::level_data^  ds = (gcnew BB_Crash::level_data());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"sprite_type_listDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline level_data::sprite_typeDataTable::sprite_typeDataTable() {
        this->TableName = L"sprite_type";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline level_data::sprite_typeDataTable::sprite_typeDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline level_data::sprite_typeDataTable::sprite_typeDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  level_data::sprite_typeDataTable::dirColumn::get() {
        return this->columndir;
    }
    
    inline ::System::Data::DataColumn^  level_data::sprite_typeDataTable::pst_fileColumn::get() {
        return this->columnpst_file;
    }
    
    inline ::System::Data::DataColumn^  level_data::sprite_typeDataTable::sprite_type_textColumn::get() {
        return this->columnsprite_type_text;
    }
    
    inline ::System::Data::DataColumn^  level_data::sprite_typeDataTable::sprite_type_list_IdColumn::get() {
        return this->columnsprite_type_list_Id;
    }
    
    inline ::System::Int32 level_data::sprite_typeDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline BB_Crash::level_data::sprite_typeRow^  level_data::sprite_typeDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<BB_Crash::level_data::sprite_typeRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void level_data::sprite_typeDataTable::Addsprite_typeRow(BB_Crash::level_data::sprite_typeRow^  row) {
        this->Rows->Add(row);
    }
    
    inline BB_Crash::level_data::sprite_typeRow^  level_data::sprite_typeDataTable::Addsprite_typeRow(System::String^  dir, 
                System::String^  pst_file, System::String^  sprite_type_text, BB_Crash::level_data::sprite_type_listRow^  parentsprite_type_listRowBysprite_type_list_sprite_type) {
        BB_Crash::level_data::sprite_typeRow^  rowsprite_typeRow = (cli::safe_cast<BB_Crash::level_data::sprite_typeRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {dir, pst_file, sprite_type_text, 
            nullptr};
        if (parentsprite_type_listRowBysprite_type_list_sprite_type != nullptr) {
            columnValuesArray[3] = parentsprite_type_listRowBysprite_type_list_sprite_type[0];
        }
        rowsprite_typeRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowsprite_typeRow);
        return rowsprite_typeRow;
    }
    
    inline ::System::Collections::IEnumerator^  level_data::sprite_typeDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  level_data::sprite_typeDataTable::Clone() {
        BB_Crash::level_data::sprite_typeDataTable^  cln = (cli::safe_cast<BB_Crash::level_data::sprite_typeDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  level_data::sprite_typeDataTable::CreateInstance() {
        return (gcnew BB_Crash::level_data::sprite_typeDataTable());
    }
    
    inline ::System::Void level_data::sprite_typeDataTable::InitVars() {
        this->columndir = __super::Columns[L"dir"];
        this->columnpst_file = __super::Columns[L"pst_file"];
        this->columnsprite_type_text = __super::Columns[L"sprite_type_text"];
        this->columnsprite_type_list_Id = __super::Columns[L"sprite_type_list_Id"];
    }
    
    inline ::System::Void level_data::sprite_typeDataTable::InitClass() {
        this->columndir = (gcnew ::System::Data::DataColumn(L"dir", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columndir);
        this->columnpst_file = (gcnew ::System::Data::DataColumn(L"pst_file", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnpst_file);
        this->columnsprite_type_text = (gcnew ::System::Data::DataColumn(L"sprite_type_text", ::System::String::typeid, nullptr, 
            ::System::Data::MappingType::SimpleContent));
        __super::Columns->Add(this->columnsprite_type_text);
        this->columnsprite_type_list_Id = (gcnew ::System::Data::DataColumn(L"sprite_type_list_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnsprite_type_list_Id);
        this->columndir->Namespace = L"";
        this->columnpst_file->Namespace = L"";
        this->columnsprite_type_text->AllowDBNull = false;
    }
    
    inline BB_Crash::level_data::sprite_typeRow^  level_data::sprite_typeDataTable::Newsprite_typeRow() {
        return (cli::safe_cast<BB_Crash::level_data::sprite_typeRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  level_data::sprite_typeDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew BB_Crash::level_data::sprite_typeRow(builder));
    }
    
    inline ::System::Type^  level_data::sprite_typeDataTable::GetRowType() {
        return BB_Crash::level_data::sprite_typeRow::typeid;
    }
    
    inline ::System::Void level_data::sprite_typeDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->sprite_typeRowChanged(this, (gcnew BB_Crash::level_data::sprite_typeRowChangeEvent((cli::safe_cast<BB_Crash::level_data::sprite_typeRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::sprite_typeDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->sprite_typeRowChanging(this, (gcnew BB_Crash::level_data::sprite_typeRowChangeEvent((cli::safe_cast<BB_Crash::level_data::sprite_typeRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::sprite_typeDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->sprite_typeRowDeleted(this, (gcnew BB_Crash::level_data::sprite_typeRowChangeEvent((cli::safe_cast<BB_Crash::level_data::sprite_typeRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::sprite_typeDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->sprite_typeRowDeleting(this, (gcnew BB_Crash::level_data::sprite_typeRowChangeEvent((cli::safe_cast<BB_Crash::level_data::sprite_typeRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::sprite_typeDataTable::Removesprite_typeRow(BB_Crash::level_data::sprite_typeRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  level_data::sprite_typeDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        BB_Crash::level_data^  ds = (gcnew BB_Crash::level_data());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"sprite_typeDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline level_data::sprites_listDataTable::sprites_listDataTable() {
        this->TableName = L"sprites_list";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline level_data::sprites_listDataTable::sprites_listDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline level_data::sprites_listDataTable::sprites_listDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  level_data::sprites_listDataTable::sprites_list_IdColumn::get() {
        return this->columnsprites_list_Id;
    }
    
    inline ::System::Int32 level_data::sprites_listDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline BB_Crash::level_data::sprites_listRow^  level_data::sprites_listDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<BB_Crash::level_data::sprites_listRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void level_data::sprites_listDataTable::Addsprites_listRow(BB_Crash::level_data::sprites_listRow^  row) {
        this->Rows->Add(row);
    }
    
    inline BB_Crash::level_data::sprites_listRow^  level_data::sprites_listDataTable::Addsprites_listRow() {
        BB_Crash::level_data::sprites_listRow^  rowsprites_listRow = (cli::safe_cast<BB_Crash::level_data::sprites_listRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(1) {nullptr};
        rowsprites_listRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowsprites_listRow);
        return rowsprites_listRow;
    }
    
    inline ::System::Collections::IEnumerator^  level_data::sprites_listDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  level_data::sprites_listDataTable::Clone() {
        BB_Crash::level_data::sprites_listDataTable^  cln = (cli::safe_cast<BB_Crash::level_data::sprites_listDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  level_data::sprites_listDataTable::CreateInstance() {
        return (gcnew BB_Crash::level_data::sprites_listDataTable());
    }
    
    inline ::System::Void level_data::sprites_listDataTable::InitVars() {
        this->columnsprites_list_Id = __super::Columns[L"sprites_list_Id"];
    }
    
    inline ::System::Void level_data::sprites_listDataTable::InitClass() {
        this->columnsprites_list_Id = (gcnew ::System::Data::DataColumn(L"sprites_list_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnsprites_list_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnsprites_list_Id}, 
                true)));
        this->columnsprites_list_Id->AutoIncrement = true;
        this->columnsprites_list_Id->AllowDBNull = false;
        this->columnsprites_list_Id->Unique = true;
    }
    
    inline BB_Crash::level_data::sprites_listRow^  level_data::sprites_listDataTable::Newsprites_listRow() {
        return (cli::safe_cast<BB_Crash::level_data::sprites_listRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  level_data::sprites_listDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew BB_Crash::level_data::sprites_listRow(builder));
    }
    
    inline ::System::Type^  level_data::sprites_listDataTable::GetRowType() {
        return BB_Crash::level_data::sprites_listRow::typeid;
    }
    
    inline ::System::Void level_data::sprites_listDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->sprites_listRowChanged(this, (gcnew BB_Crash::level_data::sprites_listRowChangeEvent((cli::safe_cast<BB_Crash::level_data::sprites_listRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::sprites_listDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->sprites_listRowChanging(this, (gcnew BB_Crash::level_data::sprites_listRowChangeEvent((cli::safe_cast<BB_Crash::level_data::sprites_listRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::sprites_listDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->sprites_listRowDeleted(this, (gcnew BB_Crash::level_data::sprites_listRowChangeEvent((cli::safe_cast<BB_Crash::level_data::sprites_listRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::sprites_listDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->sprites_listRowDeleting(this, (gcnew BB_Crash::level_data::sprites_listRowChangeEvent((cli::safe_cast<BB_Crash::level_data::sprites_listRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::sprites_listDataTable::Removesprites_listRow(BB_Crash::level_data::sprites_listRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  level_data::sprites_listDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        BB_Crash::level_data^  ds = (gcnew BB_Crash::level_data());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"sprites_listDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline level_data::spriteDataTable::spriteDataTable() {
        this->TableName = L"sprite";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline level_data::spriteDataTable::spriteDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline level_data::spriteDataTable::spriteDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  level_data::spriteDataTable::typeColumn::get() {
        return this->columntype;
    }
    
    inline ::System::Data::DataColumn^  level_data::spriteDataTable::initXColumn::get() {
        return this->columninitX;
    }
    
    inline ::System::Data::DataColumn^  level_data::spriteDataTable::initYColumn::get() {
        return this->columninitY;
    }
    
    inline ::System::Data::DataColumn^  level_data::spriteDataTable::initVxColumn::get() {
        return this->columninitVx;
    }
    
    inline ::System::Data::DataColumn^  level_data::spriteDataTable::initVyColumn::get() {
        return this->columninitVy;
    }
    
    inline ::System::Data::DataColumn^  level_data::spriteDataTable::initStateColumn::get() {
        return this->columninitState;
    }
    
    inline ::System::Data::DataColumn^  level_data::spriteDataTable::movementBehaviorColumn::get() {
        return this->columnmovementBehavior;
    }
    
    inline ::System::Data::DataColumn^  level_data::spriteDataTable::deathBehaviorColumn::get() {
        return this->columndeathBehavior;
    }
    
    inline ::System::Data::DataColumn^  level_data::spriteDataTable::sprite_textColumn::get() {
        return this->columnsprite_text;
    }
    
    inline ::System::Data::DataColumn^  level_data::spriteDataTable::sprites_list_IdColumn::get() {
        return this->columnsprites_list_Id;
    }
    
    inline ::System::Int32 level_data::spriteDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline BB_Crash::level_data::spriteRow^  level_data::spriteDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<BB_Crash::level_data::spriteRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void level_data::spriteDataTable::AddspriteRow(BB_Crash::level_data::spriteRow^  row) {
        this->Rows->Add(row);
    }
    
    inline BB_Crash::level_data::spriteRow^  level_data::spriteDataTable::AddspriteRow(
                System::String^  type, 
                System::Int16 initX, 
                System::Int16 initY, 
                System::SByte initVx, 
                System::SByte initVy, 
                System::String^  initState, 
                System::String^  movementBehavior, 
                System::String^  deathBehavior, 
                System::String^  sprite_text, 
                BB_Crash::level_data::sprites_listRow^  parentsprites_listRowBysprites_list_sprite) {
        BB_Crash::level_data::spriteRow^  rowspriteRow = (cli::safe_cast<BB_Crash::level_data::spriteRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(10) {type, initX, initY, 
            initVx, initVy, initState, movementBehavior, deathBehavior, sprite_text, nullptr};
        if (parentsprites_listRowBysprites_list_sprite != nullptr) {
            columnValuesArray[9] = parentsprites_listRowBysprites_list_sprite[0];
        }
        rowspriteRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowspriteRow);
        return rowspriteRow;
    }
    
    inline ::System::Collections::IEnumerator^  level_data::spriteDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  level_data::spriteDataTable::Clone() {
        BB_Crash::level_data::spriteDataTable^  cln = (cli::safe_cast<BB_Crash::level_data::spriteDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  level_data::spriteDataTable::CreateInstance() {
        return (gcnew BB_Crash::level_data::spriteDataTable());
    }
    
    inline ::System::Void level_data::spriteDataTable::InitVars() {
        this->columntype = __super::Columns[L"type"];
        this->columninitX = __super::Columns[L"initX"];
        this->columninitY = __super::Columns[L"initY"];
        this->columninitVx = __super::Columns[L"initVx"];
        this->columninitVy = __super::Columns[L"initVy"];
        this->columninitState = __super::Columns[L"initState"];
        this->columnmovementBehavior = __super::Columns[L"movementBehavior"];
        this->columndeathBehavior = __super::Columns[L"deathBehavior"];
        this->columnsprite_text = __super::Columns[L"sprite_text"];
        this->columnsprites_list_Id = __super::Columns[L"sprites_list_Id"];
    }
    
    inline ::System::Void level_data::spriteDataTable::InitClass() {
        this->columntype = (gcnew ::System::Data::DataColumn(L"type", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columntype);
        this->columninitX = (gcnew ::System::Data::DataColumn(L"initX", ::System::Int16::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columninitX);
        this->columninitY = (gcnew ::System::Data::DataColumn(L"initY", ::System::Int16::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columninitY);
        this->columninitVx = (gcnew ::System::Data::DataColumn(L"initVx", ::System::SByte::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columninitVx);
        this->columninitVy = (gcnew ::System::Data::DataColumn(L"initVy", ::System::SByte::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columninitVy);
        this->columninitState = (gcnew ::System::Data::DataColumn(L"initState", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columninitState);
        this->columnmovementBehavior = (gcnew ::System::Data::DataColumn(L"movementBehavior", ::System::String::typeid, nullptr, 
            ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnmovementBehavior);
        this->columndeathBehavior = (gcnew ::System::Data::DataColumn(L"deathBehavior", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columndeathBehavior);
        this->columnsprite_text = (gcnew ::System::Data::DataColumn(L"sprite_text", ::System::String::typeid, nullptr, ::System::Data::MappingType::SimpleContent));
        __super::Columns->Add(this->columnsprite_text);
        this->columnsprites_list_Id = (gcnew ::System::Data::DataColumn(L"sprites_list_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnsprites_list_Id);
        this->columntype->Namespace = L"";
        this->columninitX->Namespace = L"";
        this->columninitY->Namespace = L"";
        this->columninitVx->Namespace = L"";
        this->columninitVy->Namespace = L"";
        this->columninitState->Namespace = L"";
        this->columnmovementBehavior->Namespace = L"";
        this->columndeathBehavior->Namespace = L"";
        this->columnsprite_text->AllowDBNull = false;
    }
    
    inline BB_Crash::level_data::spriteRow^  level_data::spriteDataTable::NewspriteRow() {
        return (cli::safe_cast<BB_Crash::level_data::spriteRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  level_data::spriteDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew BB_Crash::level_data::spriteRow(builder));
    }
    
    inline ::System::Type^  level_data::spriteDataTable::GetRowType() {
        return BB_Crash::level_data::spriteRow::typeid;
    }
    
    inline ::System::Void level_data::spriteDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->spriteRowChanged(this, (gcnew BB_Crash::level_data::spriteRowChangeEvent((cli::safe_cast<BB_Crash::level_data::spriteRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::spriteDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->spriteRowChanging(this, (gcnew BB_Crash::level_data::spriteRowChangeEvent((cli::safe_cast<BB_Crash::level_data::spriteRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::spriteDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->spriteRowDeleted(this, (gcnew BB_Crash::level_data::spriteRowChangeEvent((cli::safe_cast<BB_Crash::level_data::spriteRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::spriteDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->spriteRowDeleting(this, (gcnew BB_Crash::level_data::spriteRowChangeEvent((cli::safe_cast<BB_Crash::level_data::spriteRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::spriteDataTable::RemovespriteRow(BB_Crash::level_data::spriteRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  level_data::spriteDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        BB_Crash::level_data^  ds = (gcnew BB_Crash::level_data());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"spriteDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline level_data::spawning_poolsDataTable::spawning_poolsDataTable() {
        this->TableName = L"spawning_pools";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline level_data::spawning_poolsDataTable::spawning_poolsDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline level_data::spawning_poolsDataTable::spawning_poolsDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  level_data::spawning_poolsDataTable::spawning_pools_IdColumn::get() {
        return this->columnspawning_pools_Id;
    }
    
    inline ::System::Int32 level_data::spawning_poolsDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline BB_Crash::level_data::spawning_poolsRow^  level_data::spawning_poolsDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<BB_Crash::level_data::spawning_poolsRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void level_data::spawning_poolsDataTable::Addspawning_poolsRow(BB_Crash::level_data::spawning_poolsRow^  row) {
        this->Rows->Add(row);
    }
    
    inline BB_Crash::level_data::spawning_poolsRow^  level_data::spawning_poolsDataTable::Addspawning_poolsRow() {
        BB_Crash::level_data::spawning_poolsRow^  rowspawning_poolsRow = (cli::safe_cast<BB_Crash::level_data::spawning_poolsRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(1) {nullptr};
        rowspawning_poolsRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowspawning_poolsRow);
        return rowspawning_poolsRow;
    }
    
    inline ::System::Collections::IEnumerator^  level_data::spawning_poolsDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  level_data::spawning_poolsDataTable::Clone() {
        BB_Crash::level_data::spawning_poolsDataTable^  cln = (cli::safe_cast<BB_Crash::level_data::spawning_poolsDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  level_data::spawning_poolsDataTable::CreateInstance() {
        return (gcnew BB_Crash::level_data::spawning_poolsDataTable());
    }
    
    inline ::System::Void level_data::spawning_poolsDataTable::InitVars() {
        this->columnspawning_pools_Id = __super::Columns[L"spawning_pools_Id"];
    }
    
    inline ::System::Void level_data::spawning_poolsDataTable::InitClass() {
        this->columnspawning_pools_Id = (gcnew ::System::Data::DataColumn(L"spawning_pools_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnspawning_pools_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnspawning_pools_Id}, 
                true)));
        this->columnspawning_pools_Id->AutoIncrement = true;
        this->columnspawning_pools_Id->AllowDBNull = false;
        this->columnspawning_pools_Id->Unique = true;
    }
    
    inline BB_Crash::level_data::spawning_poolsRow^  level_data::spawning_poolsDataTable::Newspawning_poolsRow() {
        return (cli::safe_cast<BB_Crash::level_data::spawning_poolsRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  level_data::spawning_poolsDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew BB_Crash::level_data::spawning_poolsRow(builder));
    }
    
    inline ::System::Type^  level_data::spawning_poolsDataTable::GetRowType() {
        return BB_Crash::level_data::spawning_poolsRow::typeid;
    }
    
    inline ::System::Void level_data::spawning_poolsDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->spawning_poolsRowChanged(this, (gcnew BB_Crash::level_data::spawning_poolsRowChangeEvent((cli::safe_cast<BB_Crash::level_data::spawning_poolsRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::spawning_poolsDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->spawning_poolsRowChanging(this, (gcnew BB_Crash::level_data::spawning_poolsRowChangeEvent((cli::safe_cast<BB_Crash::level_data::spawning_poolsRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::spawning_poolsDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->spawning_poolsRowDeleted(this, (gcnew BB_Crash::level_data::spawning_poolsRowChangeEvent((cli::safe_cast<BB_Crash::level_data::spawning_poolsRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::spawning_poolsDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->spawning_poolsRowDeleting(this, (gcnew BB_Crash::level_data::spawning_poolsRowChangeEvent((cli::safe_cast<BB_Crash::level_data::spawning_poolsRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::spawning_poolsDataTable::Removespawning_poolsRow(BB_Crash::level_data::spawning_poolsRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  level_data::spawning_poolsDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        BB_Crash::level_data^  ds = (gcnew BB_Crash::level_data());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"spawning_poolsDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline level_data::spawning_poolDataTable::spawning_poolDataTable() {
        this->TableName = L"spawning_pool";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline level_data::spawning_poolDataTable::spawning_poolDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline level_data::spawning_poolDataTable::spawning_poolDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  level_data::spawning_poolDataTable::xColumn::get() {
        return this->columnx;
    }
    
    inline ::System::Data::DataColumn^  level_data::spawning_poolDataTable::yColumn::get() {
        return this->columny;
    }
    
    inline ::System::Data::DataColumn^  level_data::spawning_poolDataTable::sprite_typeColumn::get() {
        return this->columnsprite_type;
    }
    
    inline ::System::Data::DataColumn^  level_data::spawning_poolDataTable::intervalTimeColumn::get() {
        return this->columnintervalTime;
    }
    
    inline ::System::Data::DataColumn^  level_data::spawning_poolDataTable::intervalTypeColumn::get() {
        return this->columnintervalType;
    }
    
    inline ::System::Data::DataColumn^  level_data::spawning_poolDataTable::movementBehaviorColumn::get() {
        return this->columnmovementBehavior;
    }
    
    inline ::System::Data::DataColumn^  level_data::spawning_poolDataTable::deathBehaviorColumn::get() {
        return this->columndeathBehavior;
    }
    
    inline ::System::Data::DataColumn^  level_data::spawning_poolDataTable::spawning_pool_textColumn::get() {
        return this->columnspawning_pool_text;
    }
    
    inline ::System::Data::DataColumn^  level_data::spawning_poolDataTable::spawning_pools_IdColumn::get() {
        return this->columnspawning_pools_Id;
    }
    
    inline ::System::Int32 level_data::spawning_poolDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline BB_Crash::level_data::spawning_poolRow^  level_data::spawning_poolDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<BB_Crash::level_data::spawning_poolRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void level_data::spawning_poolDataTable::Addspawning_poolRow(BB_Crash::level_data::spawning_poolRow^  row) {
        this->Rows->Add(row);
    }
    
    inline BB_Crash::level_data::spawning_poolRow^  level_data::spawning_poolDataTable::Addspawning_poolRow(
                System::Int16 x, 
                System::Int16 y, 
                System::String^  sprite_type, 
                System::SByte intervalTime, 
                System::String^  intervalType, 
                System::String^  movementBehavior, 
                System::String^  deathBehavior, 
                System::String^  spawning_pool_text, 
                BB_Crash::level_data::spawning_poolsRow^  parentspawning_poolsRowByspawning_pools_spawning_pool) {
        BB_Crash::level_data::spawning_poolRow^  rowspawning_poolRow = (cli::safe_cast<BB_Crash::level_data::spawning_poolRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(9) {x, y, sprite_type, 
            intervalTime, intervalType, movementBehavior, deathBehavior, spawning_pool_text, nullptr};
        if (parentspawning_poolsRowByspawning_pools_spawning_pool != nullptr) {
            columnValuesArray[8] = parentspawning_poolsRowByspawning_pools_spawning_pool[0];
        }
        rowspawning_poolRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowspawning_poolRow);
        return rowspawning_poolRow;
    }
    
    inline ::System::Collections::IEnumerator^  level_data::spawning_poolDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  level_data::spawning_poolDataTable::Clone() {
        BB_Crash::level_data::spawning_poolDataTable^  cln = (cli::safe_cast<BB_Crash::level_data::spawning_poolDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  level_data::spawning_poolDataTable::CreateInstance() {
        return (gcnew BB_Crash::level_data::spawning_poolDataTable());
    }
    
    inline ::System::Void level_data::spawning_poolDataTable::InitVars() {
        this->columnx = __super::Columns[L"x"];
        this->columny = __super::Columns[L"y"];
        this->columnsprite_type = __super::Columns[L"sprite_type"];
        this->columnintervalTime = __super::Columns[L"intervalTime"];
        this->columnintervalType = __super::Columns[L"intervalType"];
        this->columnmovementBehavior = __super::Columns[L"movementBehavior"];
        this->columndeathBehavior = __super::Columns[L"deathBehavior"];
        this->columnspawning_pool_text = __super::Columns[L"spawning_pool_text"];
        this->columnspawning_pools_Id = __super::Columns[L"spawning_pools_Id"];
    }
    
    inline ::System::Void level_data::spawning_poolDataTable::InitClass() {
        this->columnx = (gcnew ::System::Data::DataColumn(L"x", ::System::Int16::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnx);
        this->columny = (gcnew ::System::Data::DataColumn(L"y", ::System::Int16::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columny);
        this->columnsprite_type = (gcnew ::System::Data::DataColumn(L"sprite_type", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnsprite_type);
        this->columnintervalTime = (gcnew ::System::Data::DataColumn(L"intervalTime", ::System::SByte::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnintervalTime);
        this->columnintervalType = (gcnew ::System::Data::DataColumn(L"intervalType", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnintervalType);
        this->columnmovementBehavior = (gcnew ::System::Data::DataColumn(L"movementBehavior", ::System::String::typeid, nullptr, 
            ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnmovementBehavior);
        this->columndeathBehavior = (gcnew ::System::Data::DataColumn(L"deathBehavior", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columndeathBehavior);
        this->columnspawning_pool_text = (gcnew ::System::Data::DataColumn(L"spawning_pool_text", ::System::String::typeid, nullptr, 
            ::System::Data::MappingType::SimpleContent));
        __super::Columns->Add(this->columnspawning_pool_text);
        this->columnspawning_pools_Id = (gcnew ::System::Data::DataColumn(L"spawning_pools_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnspawning_pools_Id);
        this->columnx->Namespace = L"";
        this->columny->Namespace = L"";
        this->columnsprite_type->Namespace = L"";
        this->columnintervalTime->Namespace = L"";
        this->columnintervalType->Namespace = L"";
        this->columnmovementBehavior->Namespace = L"";
        this->columndeathBehavior->Namespace = L"";
        this->columnspawning_pool_text->AllowDBNull = false;
    }
    
    inline BB_Crash::level_data::spawning_poolRow^  level_data::spawning_poolDataTable::Newspawning_poolRow() {
        return (cli::safe_cast<BB_Crash::level_data::spawning_poolRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  level_data::spawning_poolDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew BB_Crash::level_data::spawning_poolRow(builder));
    }
    
    inline ::System::Type^  level_data::spawning_poolDataTable::GetRowType() {
        return BB_Crash::level_data::spawning_poolRow::typeid;
    }
    
    inline ::System::Void level_data::spawning_poolDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->spawning_poolRowChanged(this, (gcnew BB_Crash::level_data::spawning_poolRowChangeEvent((cli::safe_cast<BB_Crash::level_data::spawning_poolRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::spawning_poolDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->spawning_poolRowChanging(this, (gcnew BB_Crash::level_data::spawning_poolRowChangeEvent((cli::safe_cast<BB_Crash::level_data::spawning_poolRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::spawning_poolDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->spawning_poolRowDeleted(this, (gcnew BB_Crash::level_data::spawning_poolRowChangeEvent((cli::safe_cast<BB_Crash::level_data::spawning_poolRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::spawning_poolDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->spawning_poolRowDeleting(this, (gcnew BB_Crash::level_data::spawning_poolRowChangeEvent((cli::safe_cast<BB_Crash::level_data::spawning_poolRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void level_data::spawning_poolDataTable::Removespawning_poolRow(BB_Crash::level_data::spawning_poolRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  level_data::spawning_poolDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        BB_Crash::level_data^  ds = (gcnew BB_Crash::level_data());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"spawning_poolDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline level_data::level_mapRow::level_mapRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tablelevel_map = (cli::safe_cast<BB_Crash::level_data::level_mapDataTable^  >(this->Table));
    }
    
    inline System::String^  level_data::level_mapRow::dir::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablelevel_map->dirColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'dir\' in table \'level_map\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::level_mapRow::dir::set(System::String^  value) {
        this[this->tablelevel_map->dirColumn] = value;
    }
    
    inline System::String^  level_data::level_mapRow::tmx_file::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablelevel_map->tmx_fileColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'tmx_file\' in table \'level_map\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::level_mapRow::tmx_file::set(System::String^  value) {
        this[this->tablelevel_map->tmx_fileColumn] = value;
    }
    
    inline System::String^  level_data::level_mapRow::level_map_text::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tablelevel_map->level_map_textColumn]));
    }
    inline System::Void level_data::level_mapRow::level_map_text::set(System::String^  value) {
        this[this->tablelevel_map->level_map_textColumn] = value;
    }
    
    inline ::System::Boolean level_data::level_mapRow::IsdirNull() {
        return this->IsNull(this->tablelevel_map->dirColumn);
    }
    
    inline ::System::Void level_data::level_mapRow::SetdirNull() {
        this[this->tablelevel_map->dirColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean level_data::level_mapRow::Istmx_fileNull() {
        return this->IsNull(this->tablelevel_map->tmx_fileColumn);
    }
    
    inline ::System::Void level_data::level_mapRow::Settmx_fileNull() {
        this[this->tablelevel_map->tmx_fileColumn] = ::System::Convert::DBNull;
    }
    
    
    inline level_data::sprite_type_listRow::sprite_type_listRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tablesprite_type_list = (cli::safe_cast<BB_Crash::level_data::sprite_type_listDataTable^  >(this->Table));
    }
    
    inline System::Int32 level_data::sprite_type_listRow::sprite_type_list_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablesprite_type_list->sprite_type_list_IdColumn]));
    }
    inline System::Void level_data::sprite_type_listRow::sprite_type_list_Id::set(System::Int32 value) {
        this[this->tablesprite_type_list->sprite_type_list_IdColumn] = value;
    }
    
    inline cli::array< BB_Crash::level_data::sprite_typeRow^  >^  level_data::sprite_type_listRow::Getsprite_typeRows() {
        if (this->Table->ChildRelations[L"sprite_type_list_sprite_type"] == nullptr) {
            return gcnew cli::array< BB_Crash::level_data::sprite_typeRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< BB_Crash::level_data::sprite_typeRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"sprite_type_list_sprite_type"])));
        }
    }
    
    
    inline level_data::sprite_typeRow::sprite_typeRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tablesprite_type = (cli::safe_cast<BB_Crash::level_data::sprite_typeDataTable^  >(this->Table));
    }
    
    inline System::String^  level_data::sprite_typeRow::dir::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablesprite_type->dirColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'dir\' in table \'sprite_type\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::sprite_typeRow::dir::set(System::String^  value) {
        this[this->tablesprite_type->dirColumn] = value;
    }
    
    inline System::String^  level_data::sprite_typeRow::pst_file::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablesprite_type->pst_fileColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'pst_file\' in table \'sprite_type\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::sprite_typeRow::pst_file::set(System::String^  value) {
        this[this->tablesprite_type->pst_fileColumn] = value;
    }
    
    inline System::String^  level_data::sprite_typeRow::sprite_type_text::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tablesprite_type->sprite_type_textColumn]));
    }
    inline System::Void level_data::sprite_typeRow::sprite_type_text::set(System::String^  value) {
        this[this->tablesprite_type->sprite_type_textColumn] = value;
    }
    
    inline System::Int32 level_data::sprite_typeRow::sprite_type_list_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tablesprite_type->sprite_type_list_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'sprite_type_list_Id\' in table \'sprite_type\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::sprite_typeRow::sprite_type_list_Id::set(System::Int32 value) {
        this[this->tablesprite_type->sprite_type_list_IdColumn] = value;
    }
    
    inline BB_Crash::level_data::sprite_type_listRow^  level_data::sprite_typeRow::sprite_type_listRow::get() {
        return (cli::safe_cast<BB_Crash::level_data::sprite_type_listRow^  >(this->GetParentRow(this->Table->ParentRelations[L"sprite_type_list_sprite_type"])));
    }
    inline System::Void level_data::sprite_typeRow::sprite_type_listRow::set(BB_Crash::level_data::sprite_type_listRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"sprite_type_list_sprite_type"]);
    }
    
    inline ::System::Boolean level_data::sprite_typeRow::IsdirNull() {
        return this->IsNull(this->tablesprite_type->dirColumn);
    }
    
    inline ::System::Void level_data::sprite_typeRow::SetdirNull() {
        this[this->tablesprite_type->dirColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean level_data::sprite_typeRow::Ispst_fileNull() {
        return this->IsNull(this->tablesprite_type->pst_fileColumn);
    }
    
    inline ::System::Void level_data::sprite_typeRow::Setpst_fileNull() {
        this[this->tablesprite_type->pst_fileColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean level_data::sprite_typeRow::Issprite_type_list_IdNull() {
        return this->IsNull(this->tablesprite_type->sprite_type_list_IdColumn);
    }
    
    inline ::System::Void level_data::sprite_typeRow::Setsprite_type_list_IdNull() {
        this[this->tablesprite_type->sprite_type_list_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline level_data::sprites_listRow::sprites_listRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tablesprites_list = (cli::safe_cast<BB_Crash::level_data::sprites_listDataTable^  >(this->Table));
    }
    
    inline System::Int32 level_data::sprites_listRow::sprites_list_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablesprites_list->sprites_list_IdColumn]));
    }
    inline System::Void level_data::sprites_listRow::sprites_list_Id::set(System::Int32 value) {
        this[this->tablesprites_list->sprites_list_IdColumn] = value;
    }
    
    inline cli::array< BB_Crash::level_data::spriteRow^  >^  level_data::sprites_listRow::GetspriteRows() {
        if (this->Table->ChildRelations[L"sprites_list_sprite"] == nullptr) {
            return gcnew cli::array< BB_Crash::level_data::spriteRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< BB_Crash::level_data::spriteRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"sprites_list_sprite"])));
        }
    }
    
    
    inline level_data::spriteRow::spriteRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tablesprite = (cli::safe_cast<BB_Crash::level_data::spriteDataTable^  >(this->Table));
    }
    
    inline System::String^  level_data::spriteRow::type::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablesprite->typeColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'type\' in table \'sprite\' is DBNull.", e));
        }
    }
    inline System::Void level_data::spriteRow::type::set(System::String^  value) {
        this[this->tablesprite->typeColumn] = value;
    }
    
    inline System::Int16 level_data::spriteRow::initX::get() {
        try {
            return (cli::safe_cast<::System::Int16 >(this[this->tablesprite->initXColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'initX\' in table \'sprite\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::spriteRow::initX::set(System::Int16 value) {
        this[this->tablesprite->initXColumn] = value;
    }
    
    inline System::Int16 level_data::spriteRow::initY::get() {
        try {
            return (cli::safe_cast<::System::Int16 >(this[this->tablesprite->initYColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'initY\' in table \'sprite\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::spriteRow::initY::set(System::Int16 value) {
        this[this->tablesprite->initYColumn] = value;
    }
    
    inline System::SByte level_data::spriteRow::initVx::get() {
        try {
            return (cli::safe_cast<::System::SByte >(this[this->tablesprite->initVxColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'initVx\' in table \'sprite\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::spriteRow::initVx::set(System::SByte value) {
        this[this->tablesprite->initVxColumn] = value;
    }
    
    inline System::SByte level_data::spriteRow::initVy::get() {
        try {
            return (cli::safe_cast<::System::SByte >(this[this->tablesprite->initVyColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'initVy\' in table \'sprite\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::spriteRow::initVy::set(System::SByte value) {
        this[this->tablesprite->initVyColumn] = value;
    }
    
    inline System::String^  level_data::spriteRow::initState::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablesprite->initStateColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'initState\' in table \'sprite\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::spriteRow::initState::set(System::String^  value) {
        this[this->tablesprite->initStateColumn] = value;
    }
    
    inline System::String^  level_data::spriteRow::movementBehavior::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablesprite->movementBehaviorColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'movementBehavior\' in table \'sprite\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::spriteRow::movementBehavior::set(System::String^  value) {
        this[this->tablesprite->movementBehaviorColumn] = value;
    }
    
    inline System::String^  level_data::spriteRow::deathBehavior::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablesprite->deathBehaviorColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'deathBehavior\' in table \'sprite\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::spriteRow::deathBehavior::set(System::String^  value) {
        this[this->tablesprite->deathBehaviorColumn] = value;
    }
    
    inline System::String^  level_data::spriteRow::sprite_text::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tablesprite->sprite_textColumn]));
    }
    inline System::Void level_data::spriteRow::sprite_text::set(System::String^  value) {
        this[this->tablesprite->sprite_textColumn] = value;
    }
    
    inline System::Int32 level_data::spriteRow::sprites_list_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tablesprite->sprites_list_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'sprites_list_Id\' in table \'sprite\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::spriteRow::sprites_list_Id::set(System::Int32 value) {
        this[this->tablesprite->sprites_list_IdColumn] = value;
    }
    
    inline BB_Crash::level_data::sprites_listRow^  level_data::spriteRow::sprites_listRow::get() {
        return (cli::safe_cast<BB_Crash::level_data::sprites_listRow^  >(this->GetParentRow(this->Table->ParentRelations[L"sprites_list_sprite"])));
    }
    inline System::Void level_data::spriteRow::sprites_listRow::set(BB_Crash::level_data::sprites_listRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"sprites_list_sprite"]);
    }
    
    inline ::System::Boolean level_data::spriteRow::IstypeNull() {
        return this->IsNull(this->tablesprite->typeColumn);
    }
    
    inline ::System::Void level_data::spriteRow::SettypeNull() {
        this[this->tablesprite->typeColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean level_data::spriteRow::IsinitXNull() {
        return this->IsNull(this->tablesprite->initXColumn);
    }
    
    inline ::System::Void level_data::spriteRow::SetinitXNull() {
        this[this->tablesprite->initXColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean level_data::spriteRow::IsinitYNull() {
        return this->IsNull(this->tablesprite->initYColumn);
    }
    
    inline ::System::Void level_data::spriteRow::SetinitYNull() {
        this[this->tablesprite->initYColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean level_data::spriteRow::IsinitVxNull() {
        return this->IsNull(this->tablesprite->initVxColumn);
    }
    
    inline ::System::Void level_data::spriteRow::SetinitVxNull() {
        this[this->tablesprite->initVxColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean level_data::spriteRow::IsinitVyNull() {
        return this->IsNull(this->tablesprite->initVyColumn);
    }
    
    inline ::System::Void level_data::spriteRow::SetinitVyNull() {
        this[this->tablesprite->initVyColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean level_data::spriteRow::IsinitStateNull() {
        return this->IsNull(this->tablesprite->initStateColumn);
    }
    
    inline ::System::Void level_data::spriteRow::SetinitStateNull() {
        this[this->tablesprite->initStateColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean level_data::spriteRow::IsmovementBehaviorNull() {
        return this->IsNull(this->tablesprite->movementBehaviorColumn);
    }
    
    inline ::System::Void level_data::spriteRow::SetmovementBehaviorNull() {
        this[this->tablesprite->movementBehaviorColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean level_data::spriteRow::IsdeathBehaviorNull() {
        return this->IsNull(this->tablesprite->deathBehaviorColumn);
    }
    
    inline ::System::Void level_data::spriteRow::SetdeathBehaviorNull() {
        this[this->tablesprite->deathBehaviorColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean level_data::spriteRow::Issprites_list_IdNull() {
        return this->IsNull(this->tablesprite->sprites_list_IdColumn);
    }
    
    inline ::System::Void level_data::spriteRow::Setsprites_list_IdNull() {
        this[this->tablesprite->sprites_list_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline level_data::spawning_poolsRow::spawning_poolsRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tablespawning_pools = (cli::safe_cast<BB_Crash::level_data::spawning_poolsDataTable^  >(this->Table));
    }
    
    inline System::Int32 level_data::spawning_poolsRow::spawning_pools_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablespawning_pools->spawning_pools_IdColumn]));
    }
    inline System::Void level_data::spawning_poolsRow::spawning_pools_Id::set(System::Int32 value) {
        this[this->tablespawning_pools->spawning_pools_IdColumn] = value;
    }
    
    inline cli::array< BB_Crash::level_data::spawning_poolRow^  >^  level_data::spawning_poolsRow::Getspawning_poolRows() {
        if (this->Table->ChildRelations[L"spawning_pools_spawning_pool"] == nullptr) {
            return gcnew cli::array< BB_Crash::level_data::spawning_poolRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< BB_Crash::level_data::spawning_poolRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"spawning_pools_spawning_pool"])));
        }
    }
    
    
    inline level_data::spawning_poolRow::spawning_poolRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tablespawning_pool = (cli::safe_cast<BB_Crash::level_data::spawning_poolDataTable^  >(this->Table));
    }
    
    inline System::Int16 level_data::spawning_poolRow::x::get() {
        try {
            return (cli::safe_cast<::System::Int16 >(this[this->tablespawning_pool->xColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'x\' in table \'spawning_pool\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::spawning_poolRow::x::set(System::Int16 value) {
        this[this->tablespawning_pool->xColumn] = value;
    }
    
    inline System::Int16 level_data::spawning_poolRow::y::get() {
        try {
            return (cli::safe_cast<::System::Int16 >(this[this->tablespawning_pool->yColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'y\' in table \'spawning_pool\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::spawning_poolRow::y::set(System::Int16 value) {
        this[this->tablespawning_pool->yColumn] = value;
    }
    
    inline System::String^  level_data::spawning_poolRow::sprite_type::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablespawning_pool->sprite_typeColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'sprite_type\' in table \'spawning_pool\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::spawning_poolRow::sprite_type::set(System::String^  value) {
        this[this->tablespawning_pool->sprite_typeColumn] = value;
    }
    
    inline System::SByte level_data::spawning_poolRow::intervalTime::get() {
        try {
            return (cli::safe_cast<::System::SByte >(this[this->tablespawning_pool->intervalTimeColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'intervalTime\' in table \'spawning_pool\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::spawning_poolRow::intervalTime::set(System::SByte value) {
        this[this->tablespawning_pool->intervalTimeColumn] = value;
    }
    
    inline System::String^  level_data::spawning_poolRow::intervalType::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablespawning_pool->intervalTypeColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'intervalType\' in table \'spawning_pool\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::spawning_poolRow::intervalType::set(System::String^  value) {
        this[this->tablespawning_pool->intervalTypeColumn] = value;
    }
    
    inline System::String^  level_data::spawning_poolRow::movementBehavior::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablespawning_pool->movementBehaviorColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'movementBehavior\' in table \'spawning_pool\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::spawning_poolRow::movementBehavior::set(System::String^  value) {
        this[this->tablespawning_pool->movementBehaviorColumn] = value;
    }
    
    inline System::String^  level_data::spawning_poolRow::deathBehavior::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tablespawning_pool->deathBehaviorColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'deathBehavior\' in table \'spawning_pool\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::spawning_poolRow::deathBehavior::set(System::String^  value) {
        this[this->tablespawning_pool->deathBehaviorColumn] = value;
    }
    
    inline System::String^  level_data::spawning_poolRow::spawning_pool_text::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tablespawning_pool->spawning_pool_textColumn]));
    }
    inline System::Void level_data::spawning_poolRow::spawning_pool_text::set(System::String^  value) {
        this[this->tablespawning_pool->spawning_pool_textColumn] = value;
    }
    
    inline System::Int32 level_data::spawning_poolRow::spawning_pools_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tablespawning_pool->spawning_pools_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'spawning_pools_Id\' in table \'spawning_pool\' is DBNull.", 
                e));
        }
    }
    inline System::Void level_data::spawning_poolRow::spawning_pools_Id::set(System::Int32 value) {
        this[this->tablespawning_pool->spawning_pools_IdColumn] = value;
    }
    
    inline BB_Crash::level_data::spawning_poolsRow^  level_data::spawning_poolRow::spawning_poolsRow::get() {
        return (cli::safe_cast<BB_Crash::level_data::spawning_poolsRow^  >(this->GetParentRow(this->Table->ParentRelations[L"spawning_pools_spawning_pool"])));
    }
    inline System::Void level_data::spawning_poolRow::spawning_poolsRow::set(BB_Crash::level_data::spawning_poolsRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"spawning_pools_spawning_pool"]);
    }
    
    inline ::System::Boolean level_data::spawning_poolRow::IsxNull() {
        return this->IsNull(this->tablespawning_pool->xColumn);
    }
    
    inline ::System::Void level_data::spawning_poolRow::SetxNull() {
        this[this->tablespawning_pool->xColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean level_data::spawning_poolRow::IsyNull() {
        return this->IsNull(this->tablespawning_pool->yColumn);
    }
    
    inline ::System::Void level_data::spawning_poolRow::SetyNull() {
        this[this->tablespawning_pool->yColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean level_data::spawning_poolRow::Issprite_typeNull() {
        return this->IsNull(this->tablespawning_pool->sprite_typeColumn);
    }
    
    inline ::System::Void level_data::spawning_poolRow::Setsprite_typeNull() {
        this[this->tablespawning_pool->sprite_typeColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean level_data::spawning_poolRow::IsintervalTimeNull() {
        return this->IsNull(this->tablespawning_pool->intervalTimeColumn);
    }
    
    inline ::System::Void level_data::spawning_poolRow::SetintervalTimeNull() {
        this[this->tablespawning_pool->intervalTimeColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean level_data::spawning_poolRow::IsintervalTypeNull() {
        return this->IsNull(this->tablespawning_pool->intervalTypeColumn);
    }
    
    inline ::System::Void level_data::spawning_poolRow::SetintervalTypeNull() {
        this[this->tablespawning_pool->intervalTypeColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean level_data::spawning_poolRow::IsmovementBehaviorNull() {
        return this->IsNull(this->tablespawning_pool->movementBehaviorColumn);
    }
    
    inline ::System::Void level_data::spawning_poolRow::SetmovementBehaviorNull() {
        this[this->tablespawning_pool->movementBehaviorColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean level_data::spawning_poolRow::IsdeathBehaviorNull() {
        return this->IsNull(this->tablespawning_pool->deathBehaviorColumn);
    }
    
    inline ::System::Void level_data::spawning_poolRow::SetdeathBehaviorNull() {
        this[this->tablespawning_pool->deathBehaviorColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean level_data::spawning_poolRow::Isspawning_pools_IdNull() {
        return this->IsNull(this->tablespawning_pool->spawning_pools_IdColumn);
    }
    
    inline ::System::Void level_data::spawning_poolRow::Setspawning_pools_IdNull() {
        this[this->tablespawning_pool->spawning_pools_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline level_data::level_mapRowChangeEvent::level_mapRowChangeEvent(BB_Crash::level_data::level_mapRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline BB_Crash::level_data::level_mapRow^  level_data::level_mapRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction level_data::level_mapRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline level_data::sprite_type_listRowChangeEvent::sprite_type_listRowChangeEvent(BB_Crash::level_data::sprite_type_listRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline BB_Crash::level_data::sprite_type_listRow^  level_data::sprite_type_listRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction level_data::sprite_type_listRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline level_data::sprite_typeRowChangeEvent::sprite_typeRowChangeEvent(BB_Crash::level_data::sprite_typeRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline BB_Crash::level_data::sprite_typeRow^  level_data::sprite_typeRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction level_data::sprite_typeRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline level_data::sprites_listRowChangeEvent::sprites_listRowChangeEvent(BB_Crash::level_data::sprites_listRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline BB_Crash::level_data::sprites_listRow^  level_data::sprites_listRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction level_data::sprites_listRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline level_data::spriteRowChangeEvent::spriteRowChangeEvent(BB_Crash::level_data::spriteRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline BB_Crash::level_data::spriteRow^  level_data::spriteRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction level_data::spriteRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline level_data::spawning_poolsRowChangeEvent::spawning_poolsRowChangeEvent(BB_Crash::level_data::spawning_poolsRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline BB_Crash::level_data::spawning_poolsRow^  level_data::spawning_poolsRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction level_data::spawning_poolsRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline level_data::spawning_poolRowChangeEvent::spawning_poolRowChangeEvent(BB_Crash::level_data::spawning_poolRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline BB_Crash::level_data::spawning_poolRow^  level_data::spawning_poolRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction level_data::spawning_poolRowChangeEvent::Action::get() {
        return this->eventAction;
    }
}
