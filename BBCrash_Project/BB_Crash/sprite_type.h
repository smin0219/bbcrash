#pragma once

#using <mscorlib.dll>
#using <System.dll>
#using <System.Data.dll>
#using <System.Xml.dll>

using namespace System::Security::Permissions;
[assembly:SecurityPermissionAttribute(SecurityAction::RequestMinimum, SkipVerification=false)];
// 
// This source code was auto-generated by xsd, Version=4.6.1055.0.
// 
namespace BB_Crash {
    using namespace System;
    ref class NewDataSet;
    
    
    /// <summary>
///Represents a strongly typed in-memory cache of data.
///</summary>
    [System::Serializable, 
    System::ComponentModel::DesignerCategoryAttribute(L"code"), 
    System::ComponentModel::ToolboxItem(true), 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedDataSetSchema"), 
    System::Xml::Serialization::XmlRootAttribute(L"NewDataSet"), 
    System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.DataSet")]
    public ref class NewDataSet : public ::System::Data::DataSet {
        public : ref class sprite_typeDataTable;
        public : ref class images_listDataTable;
        public : ref class image_fileDataTable;
        public : ref class animations_listDataTable;
        public : ref class animation_stateDataTable;
        public : ref class animation_sequenceDataTable;
        public : ref class poseDataTable;
        public : ref class sprite_typeRow;
        public : ref class images_listRow;
        public : ref class image_fileRow;
        public : ref class animations_listRow;
        public : ref class animation_stateRow;
        public : ref class animation_sequenceRow;
        public : ref class poseRow;
        public : ref class sprite_typeRowChangeEvent;
        public : ref class images_listRowChangeEvent;
        public : ref class image_fileRowChangeEvent;
        public : ref class animations_listRowChangeEvent;
        public : ref class animation_stateRowChangeEvent;
        public : ref class animation_sequenceRowChangeEvent;
        public : ref class poseRowChangeEvent;
        
        private: BB_Crash::NewDataSet::sprite_typeDataTable^  tablesprite_type;
        
        private: BB_Crash::NewDataSet::images_listDataTable^  tableimages_list;
        
        private: BB_Crash::NewDataSet::image_fileDataTable^  tableimage_file;
        
        private: BB_Crash::NewDataSet::animations_listDataTable^  tableanimations_list;
        
        private: BB_Crash::NewDataSet::animation_stateDataTable^  tableanimation_state;
        
        private: BB_Crash::NewDataSet::animation_sequenceDataTable^  tableanimation_sequence;
        
        private: BB_Crash::NewDataSet::poseDataTable^  tablepose;
        
        private: ::System::Data::DataRelation^  relationsprite_type_images_list;
        
        private: ::System::Data::DataRelation^  relationimages_list_image_file;
        
        private: ::System::Data::DataRelation^  relationsprite_type_animations_list;
        
        private: ::System::Data::DataRelation^  relationanimations_list_animation_state;
        
        private: ::System::Data::DataRelation^  relationanimation_state_animation_sequence;
        
        private: ::System::Data::DataRelation^  relationanimation_sequence_pose;
        
        private: ::System::Data::SchemaSerializationMode _schemaSerializationMode;
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void sprite_typeRowChangeEventHandler(::System::Object^  sender, BB_Crash::NewDataSet::sprite_typeRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void images_listRowChangeEventHandler(::System::Object^  sender, BB_Crash::NewDataSet::images_listRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void image_fileRowChangeEventHandler(::System::Object^  sender, BB_Crash::NewDataSet::image_fileRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void animations_listRowChangeEventHandler(::System::Object^  sender, BB_Crash::NewDataSet::animations_listRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void animation_stateRowChangeEventHandler(::System::Object^  sender, BB_Crash::NewDataSet::animation_stateRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void animation_sequenceRowChangeEventHandler(::System::Object^  sender, BB_Crash::NewDataSet::animation_sequenceRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void poseRowChangeEventHandler(::System::Object^  sender, BB_Crash::NewDataSet::poseRowChangeEvent^  e);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet();
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property BB_Crash::NewDataSet::sprite_typeDataTable^  sprite_type {
            BB_Crash::NewDataSet::sprite_typeDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property BB_Crash::NewDataSet::images_listDataTable^  images_list {
            BB_Crash::NewDataSet::images_listDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property BB_Crash::NewDataSet::image_fileDataTable^  image_file {
            BB_Crash::NewDataSet::image_fileDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property BB_Crash::NewDataSet::animations_listDataTable^  animations_list {
            BB_Crash::NewDataSet::animations_listDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property BB_Crash::NewDataSet::animation_stateDataTable^  animation_state {
            BB_Crash::NewDataSet::animation_stateDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property BB_Crash::NewDataSet::animation_sequenceDataTable^  animation_sequence {
            BB_Crash::NewDataSet::animation_sequenceDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property BB_Crash::NewDataSet::poseDataTable^  pose {
            BB_Crash::NewDataSet::poseDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::BrowsableAttribute(true), 
        System::ComponentModel::DesignerSerializationVisibilityAttribute(::System::ComponentModel::DesignerSerializationVisibility::Visible)]
        virtual property ::System::Data::SchemaSerializationMode SchemaSerializationMode {
            ::System::Data::SchemaSerializationMode get() override;
            System::Void set(::System::Data::SchemaSerializationMode value) override;
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::DesignerSerializationVisibilityAttribute(::System::ComponentModel::DesignerSerializationVisibility::Hidden)]
        property ::System::Data::DataTableCollection^  Tables {
            ::System::Data::DataTableCollection^  get() new;
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::DesignerSerializationVisibilityAttribute(::System::ComponentModel::DesignerSerializationVisibility::Hidden)]
        property ::System::Data::DataRelationCollection^  Relations {
            ::System::Data::DataRelationCollection^  get() new;
        }
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void InitializeDerivedDataSet() override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataSet^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Boolean ShouldSerializeTables() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Boolean ShouldSerializeRelations() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void ReadXmlSerializable(::System::Xml::XmlReader^  reader) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Xml::Schema::XmlSchema^  GetSchemaSerializable() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars(::System::Boolean initTable);
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializesprite_type();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeimages_list();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeimage_file();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeanimations_list();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeanimation_state();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeanimation_sequence();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializepose();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SchemaChanged(::System::Object^  sender, ::System::ComponentModel::CollectionChangeEventArgs^  e);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedDataSetSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class sprite_typeDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnwidth;
            
            private: ::System::Data::DataColumn^  columnheight;
            
            private: ::System::Data::DataColumn^  columnsprite_type_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::sprite_typeRowChangeEventHandler^  sprite_typeRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::sprite_typeRowChangeEventHandler^  sprite_typeRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::sprite_typeRowChangeEventHandler^  sprite_typeRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::sprite_typeRowChangeEventHandler^  sprite_typeRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprite_typeDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprite_typeDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprite_typeDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  widthColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  heightColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  sprite_type_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::sprite_typeRow^  default [::System::Int32 ] {
                BB_Crash::NewDataSet::sprite_typeRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Addsprite_typeRow(BB_Crash::NewDataSet::sprite_typeRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::NewDataSet::sprite_typeRow^  Addsprite_typeRow(System::UInt64 width, System::UInt64 height);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::NewDataSet::sprite_typeRow^  Newsprite_typeRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Removesprite_typeRow(BB_Crash::NewDataSet::sprite_typeRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class images_listDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnimages_list_Id;
            
            private: ::System::Data::DataColumn^  columnsprite_type_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::images_listRowChangeEventHandler^  images_listRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::images_listRowChangeEventHandler^  images_listRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::images_listRowChangeEventHandler^  images_listRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::images_listRowChangeEventHandler^  images_listRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            images_listDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            images_listDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            images_listDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  images_list_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  sprite_type_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::images_listRow^  default [::System::Int32 ] {
                BB_Crash::NewDataSet::images_listRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Addimages_listRow(BB_Crash::NewDataSet::images_listRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::NewDataSet::images_listRow^  Addimages_listRow(BB_Crash::NewDataSet::sprite_typeRow^  parentsprite_typeRowBysprite_type_images_list);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::NewDataSet::images_listRow^  Newimages_listRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Removeimages_listRow(BB_Crash::NewDataSet::images_listRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class image_fileDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnid;
            
            private: ::System::Data::DataColumn^  columnfile_name;
            
            private: ::System::Data::DataColumn^  columnimages_list_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::image_fileRowChangeEventHandler^  image_fileRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::image_fileRowChangeEventHandler^  image_fileRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::image_fileRowChangeEventHandler^  image_fileRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::image_fileRowChangeEventHandler^  image_fileRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            image_fileDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            image_fileDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            image_fileDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  idColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  file_nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  images_list_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::image_fileRow^  default [::System::Int32 ] {
                BB_Crash::NewDataSet::image_fileRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Addimage_fileRow(BB_Crash::NewDataSet::image_fileRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::NewDataSet::image_fileRow^  Addimage_fileRow(System::UInt64 id, System::String^  file_name, BB_Crash::NewDataSet::images_listRow^  parentimages_listRowByimages_list_image_file);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::NewDataSet::image_fileRow^  Newimage_fileRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Removeimage_fileRow(BB_Crash::NewDataSet::image_fileRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class animations_listDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnanimations_list_Id;
            
            private: ::System::Data::DataColumn^  columnsprite_type_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::animations_listRowChangeEventHandler^  animations_listRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::animations_listRowChangeEventHandler^  animations_listRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::animations_listRowChangeEventHandler^  animations_listRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::animations_listRowChangeEventHandler^  animations_listRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            animations_listDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            animations_listDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            animations_listDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  animations_list_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  sprite_type_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::animations_listRow^  default [::System::Int32 ] {
                BB_Crash::NewDataSet::animations_listRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Addanimations_listRow(BB_Crash::NewDataSet::animations_listRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::NewDataSet::animations_listRow^  Addanimations_listRow(BB_Crash::NewDataSet::sprite_typeRow^  parentsprite_typeRowBysprite_type_animations_list);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::NewDataSet::animations_listRow^  Newanimations_listRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Removeanimations_listRow(BB_Crash::NewDataSet::animations_listRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class animation_stateDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnstate;
            
            private: ::System::Data::DataColumn^  columnanimation_state_Id;
            
            private: ::System::Data::DataColumn^  columnanimations_list_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::animation_stateRowChangeEventHandler^  animation_stateRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::animation_stateRowChangeEventHandler^  animation_stateRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::animation_stateRowChangeEventHandler^  animation_stateRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::animation_stateRowChangeEventHandler^  animation_stateRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            animation_stateDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            animation_stateDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            animation_stateDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  stateColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  animation_state_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  animations_list_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::animation_stateRow^  default [::System::Int32 ] {
                BB_Crash::NewDataSet::animation_stateRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Addanimation_stateRow(BB_Crash::NewDataSet::animation_stateRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::NewDataSet::animation_stateRow^  Addanimation_stateRow(System::String^  state, BB_Crash::NewDataSet::animations_listRow^  parentanimations_listRowByanimations_list_animation_state);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::NewDataSet::animation_stateRow^  Newanimation_stateRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Removeanimation_stateRow(BB_Crash::NewDataSet::animation_stateRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class animation_sequenceDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnanimation_sequence_Id;
            
            private: ::System::Data::DataColumn^  columnanimation_state_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::animation_sequenceRowChangeEventHandler^  animation_sequenceRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::animation_sequenceRowChangeEventHandler^  animation_sequenceRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::animation_sequenceRowChangeEventHandler^  animation_sequenceRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::animation_sequenceRowChangeEventHandler^  animation_sequenceRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            animation_sequenceDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            animation_sequenceDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            animation_sequenceDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  animation_sequence_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  animation_state_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::animation_sequenceRow^  default [::System::Int32 ] {
                BB_Crash::NewDataSet::animation_sequenceRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Addanimation_sequenceRow(BB_Crash::NewDataSet::animation_sequenceRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::NewDataSet::animation_sequenceRow^  Addanimation_sequenceRow(BB_Crash::NewDataSet::animation_stateRow^  parentanimation_stateRowByanimation_state_animation_sequence);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::NewDataSet::animation_sequenceRow^  Newanimation_sequenceRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Removeanimation_sequenceRow(BB_Crash::NewDataSet::animation_sequenceRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class poseDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnimage_id;
            
            private: ::System::Data::DataColumn^  columnduration;
            
            private: ::System::Data::DataColumn^  columnanimation_sequence_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::poseRowChangeEventHandler^  poseRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::poseRowChangeEventHandler^  poseRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::poseRowChangeEventHandler^  poseRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event BB_Crash::NewDataSet::poseRowChangeEventHandler^  poseRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            poseDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            poseDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            poseDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  image_idColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  durationColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  animation_sequence_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::poseRow^  default [::System::Int32 ] {
                BB_Crash::NewDataSet::poseRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddposeRow(BB_Crash::NewDataSet::poseRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::NewDataSet::poseRow^  AddposeRow(System::UInt64 image_id, System::UInt64 duration, BB_Crash::NewDataSet::animation_sequenceRow^  parentanimation_sequenceRowByanimation_sequence_pose);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            BB_Crash::NewDataSet::poseRow^  NewposeRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveposeRow(BB_Crash::NewDataSet::poseRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class sprite_typeRow : public ::System::Data::DataRow {
            
            private: BB_Crash::NewDataSet::sprite_typeDataTable^  tablesprite_type;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprite_typeRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::UInt64 width {
                System::UInt64 get();
                System::Void set(System::UInt64 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::UInt64 height {
                System::UInt64 get();
                System::Void set(System::UInt64 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 sprite_type_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< BB_Crash::NewDataSet::images_listRow^  >^  Getimages_listRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< BB_Crash::NewDataSet::animations_listRow^  >^  Getanimations_listRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class images_listRow : public ::System::Data::DataRow {
            
            private: BB_Crash::NewDataSet::images_listDataTable^  tableimages_list;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            images_listRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 images_list_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 sprite_type_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::sprite_typeRow^  sprite_typeRow {
                BB_Crash::NewDataSet::sprite_typeRow^  get();
                System::Void set(BB_Crash::NewDataSet::sprite_typeRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Issprite_type_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Setsprite_type_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< BB_Crash::NewDataSet::image_fileRow^  >^  Getimage_fileRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class image_fileRow : public ::System::Data::DataRow {
            
            private: BB_Crash::NewDataSet::image_fileDataTable^  tableimage_file;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            image_fileRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::UInt64 id {
                System::UInt64 get();
                System::Void set(System::UInt64 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  file_name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 images_list_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::images_listRow^  images_listRow {
                BB_Crash::NewDataSet::images_listRow^  get();
                System::Void set(BB_Crash::NewDataSet::images_listRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsidNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetidNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Isfile_nameNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Setfile_nameNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Isimages_list_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Setimages_list_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class animations_listRow : public ::System::Data::DataRow {
            
            private: BB_Crash::NewDataSet::animations_listDataTable^  tableanimations_list;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            animations_listRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 animations_list_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 sprite_type_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::sprite_typeRow^  sprite_typeRow {
                BB_Crash::NewDataSet::sprite_typeRow^  get();
                System::Void set(BB_Crash::NewDataSet::sprite_typeRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Issprite_type_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Setsprite_type_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< BB_Crash::NewDataSet::animation_stateRow^  >^  Getanimation_stateRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class animation_stateRow : public ::System::Data::DataRow {
            
            private: BB_Crash::NewDataSet::animation_stateDataTable^  tableanimation_state;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            animation_stateRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  state {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 animation_state_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 animations_list_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::animations_listRow^  animations_listRow {
                BB_Crash::NewDataSet::animations_listRow^  get();
                System::Void set(BB_Crash::NewDataSet::animations_listRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Isanimations_list_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Setanimations_list_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< BB_Crash::NewDataSet::animation_sequenceRow^  >^  Getanimation_sequenceRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class animation_sequenceRow : public ::System::Data::DataRow {
            
            private: BB_Crash::NewDataSet::animation_sequenceDataTable^  tableanimation_sequence;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            animation_sequenceRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 animation_sequence_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 animation_state_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::animation_stateRow^  animation_stateRow {
                BB_Crash::NewDataSet::animation_stateRow^  get();
                System::Void set(BB_Crash::NewDataSet::animation_stateRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Isanimation_state_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Setanimation_state_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< BB_Crash::NewDataSet::poseRow^  >^  GetposeRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class poseRow : public ::System::Data::DataRow {
            
            private: BB_Crash::NewDataSet::poseDataTable^  tablepose;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            poseRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::UInt64 image_id {
                System::UInt64 get();
                System::Void set(System::UInt64 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::UInt64 duration {
                System::UInt64 get();
                System::Void set(System::UInt64 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 animation_sequence_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::animation_sequenceRow^  animation_sequenceRow {
                BB_Crash::NewDataSet::animation_sequenceRow^  get();
                System::Void set(BB_Crash::NewDataSet::animation_sequenceRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Isimage_idNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Setimage_idNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsdurationNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetdurationNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Isanimation_sequence_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Setanimation_sequence_IdNull();
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class sprite_typeRowChangeEvent : public ::System::EventArgs {
            
            private: BB_Crash::NewDataSet::sprite_typeRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            sprite_typeRowChangeEvent(BB_Crash::NewDataSet::sprite_typeRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::sprite_typeRow^  Row {
                BB_Crash::NewDataSet::sprite_typeRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class images_listRowChangeEvent : public ::System::EventArgs {
            
            private: BB_Crash::NewDataSet::images_listRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            images_listRowChangeEvent(BB_Crash::NewDataSet::images_listRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::images_listRow^  Row {
                BB_Crash::NewDataSet::images_listRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class image_fileRowChangeEvent : public ::System::EventArgs {
            
            private: BB_Crash::NewDataSet::image_fileRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            image_fileRowChangeEvent(BB_Crash::NewDataSet::image_fileRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::image_fileRow^  Row {
                BB_Crash::NewDataSet::image_fileRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class animations_listRowChangeEvent : public ::System::EventArgs {
            
            private: BB_Crash::NewDataSet::animations_listRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            animations_listRowChangeEvent(BB_Crash::NewDataSet::animations_listRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::animations_listRow^  Row {
                BB_Crash::NewDataSet::animations_listRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class animation_stateRowChangeEvent : public ::System::EventArgs {
            
            private: BB_Crash::NewDataSet::animation_stateRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            animation_stateRowChangeEvent(BB_Crash::NewDataSet::animation_stateRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::animation_stateRow^  Row {
                BB_Crash::NewDataSet::animation_stateRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class animation_sequenceRowChangeEvent : public ::System::EventArgs {
            
            private: BB_Crash::NewDataSet::animation_sequenceRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            animation_sequenceRowChangeEvent(BB_Crash::NewDataSet::animation_sequenceRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::animation_sequenceRow^  Row {
                BB_Crash::NewDataSet::animation_sequenceRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class poseRowChangeEvent : public ::System::EventArgs {
            
            private: BB_Crash::NewDataSet::poseRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            poseRowChangeEvent(BB_Crash::NewDataSet::poseRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property BB_Crash::NewDataSet::poseRow^  Row {
                BB_Crash::NewDataSet::poseRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
    };
}
namespace BB_Crash {
    
    
    inline NewDataSet::NewDataSet() {
        this->BeginInit();
        this->InitClass();
        ::System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler = gcnew ::System::ComponentModel::CollectionChangeEventHandler(this, &BB_Crash::NewDataSet::SchemaChanged);
        __super::Tables->CollectionChanged += schemaChangedHandler;
        __super::Relations->CollectionChanged += schemaChangedHandler;
        this->EndInit();
    }
    
    inline NewDataSet::NewDataSet(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataSet(info, context, false) {
        if (this->IsBinarySerialized(info, context) == true) {
            this->InitVars(false);
            ::System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler1 = gcnew ::System::ComponentModel::CollectionChangeEventHandler(this, &BB_Crash::NewDataSet::SchemaChanged);
            this->Tables->CollectionChanged += schemaChangedHandler1;
            this->Relations->CollectionChanged += schemaChangedHandler1;
            return;
        }
        ::System::String^  strSchema = (cli::safe_cast<::System::String^  >(info->GetValue(L"XmlSchema", ::System::String::typeid)));
        if (this->DetermineSchemaSerializationMode(info, context) == ::System::Data::SchemaSerializationMode::IncludeSchema) {
            ::System::Data::DataSet^  ds = (gcnew ::System::Data::DataSet());
            ds->ReadXmlSchema((gcnew ::System::Xml::XmlTextReader((gcnew ::System::IO::StringReader(strSchema)))));
            if (ds->Tables[L"sprite_type"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::NewDataSet::sprite_typeDataTable(ds->Tables[L"sprite_type"])));
            }
            if (ds->Tables[L"images_list"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::NewDataSet::images_listDataTable(ds->Tables[L"images_list"])));
            }
            if (ds->Tables[L"image_file"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::NewDataSet::image_fileDataTable(ds->Tables[L"image_file"])));
            }
            if (ds->Tables[L"animations_list"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::NewDataSet::animations_listDataTable(ds->Tables[L"animations_list"])));
            }
            if (ds->Tables[L"animation_state"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::NewDataSet::animation_stateDataTable(ds->Tables[L"animation_state"])));
            }
            if (ds->Tables[L"animation_sequence"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::NewDataSet::animation_sequenceDataTable(ds->Tables[L"animation_sequence"])));
            }
            if (ds->Tables[L"pose"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::NewDataSet::poseDataTable(ds->Tables[L"pose"])));
            }
            this->DataSetName = ds->DataSetName;
            this->Prefix = ds->Prefix;
            this->Namespace = ds->Namespace;
            this->Locale = ds->Locale;
            this->CaseSensitive = ds->CaseSensitive;
            this->EnforceConstraints = ds->EnforceConstraints;
            this->Merge(ds, false, ::System::Data::MissingSchemaAction::Add);
            this->InitVars();
        }
        else {
            this->ReadXmlSchema((gcnew ::System::Xml::XmlTextReader((gcnew ::System::IO::StringReader(strSchema)))));
        }
        this->GetSerializationData(info, context);
        ::System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler = gcnew ::System::ComponentModel::CollectionChangeEventHandler(this, &BB_Crash::NewDataSet::SchemaChanged);
        __super::Tables->CollectionChanged += schemaChangedHandler;
        this->Relations->CollectionChanged += schemaChangedHandler;
    }
    
    inline BB_Crash::NewDataSet::sprite_typeDataTable^  NewDataSet::sprite_type::get() {
        return this->tablesprite_type;
    }
    
    inline BB_Crash::NewDataSet::images_listDataTable^  NewDataSet::images_list::get() {
        return this->tableimages_list;
    }
    
    inline BB_Crash::NewDataSet::image_fileDataTable^  NewDataSet::image_file::get() {
        return this->tableimage_file;
    }
    
    inline BB_Crash::NewDataSet::animations_listDataTable^  NewDataSet::animations_list::get() {
        return this->tableanimations_list;
    }
    
    inline BB_Crash::NewDataSet::animation_stateDataTable^  NewDataSet::animation_state::get() {
        return this->tableanimation_state;
    }
    
    inline BB_Crash::NewDataSet::animation_sequenceDataTable^  NewDataSet::animation_sequence::get() {
        return this->tableanimation_sequence;
    }
    
    inline BB_Crash::NewDataSet::poseDataTable^  NewDataSet::pose::get() {
        return this->tablepose;
    }
    
    inline ::System::Data::SchemaSerializationMode NewDataSet::SchemaSerializationMode::get() {
        return this->_schemaSerializationMode;
    }
    inline System::Void NewDataSet::SchemaSerializationMode::set(::System::Data::SchemaSerializationMode value) {
        this->_schemaSerializationMode = __identifier(value);
    }
    
    inline ::System::Data::DataTableCollection^  NewDataSet::Tables::get() {
        return __super::Tables;
    }
    
    inline ::System::Data::DataRelationCollection^  NewDataSet::Relations::get() {
        return __super::Relations;
    }
    
    inline ::System::Void NewDataSet::InitializeDerivedDataSet() {
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline ::System::Data::DataSet^  NewDataSet::Clone() {
        BB_Crash::NewDataSet^  cln = (cli::safe_cast<BB_Crash::NewDataSet^  >(__super::Clone()));
        cln->InitVars();
        cln->SchemaSerializationMode = this->SchemaSerializationMode;
        return cln;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeTables() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeRelations() {
        return false;
    }
    
    inline ::System::Void NewDataSet::ReadXmlSerializable(::System::Xml::XmlReader^  reader) {
        if (this->DetermineSchemaSerializationMode(reader) == ::System::Data::SchemaSerializationMode::IncludeSchema) {
            this->Reset();
            ::System::Data::DataSet^  ds = (gcnew ::System::Data::DataSet());
            ds->ReadXml(reader);
            if (ds->Tables[L"sprite_type"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::NewDataSet::sprite_typeDataTable(ds->Tables[L"sprite_type"])));
            }
            if (ds->Tables[L"images_list"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::NewDataSet::images_listDataTable(ds->Tables[L"images_list"])));
            }
            if (ds->Tables[L"image_file"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::NewDataSet::image_fileDataTable(ds->Tables[L"image_file"])));
            }
            if (ds->Tables[L"animations_list"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::NewDataSet::animations_listDataTable(ds->Tables[L"animations_list"])));
            }
            if (ds->Tables[L"animation_state"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::NewDataSet::animation_stateDataTable(ds->Tables[L"animation_state"])));
            }
            if (ds->Tables[L"animation_sequence"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::NewDataSet::animation_sequenceDataTable(ds->Tables[L"animation_sequence"])));
            }
            if (ds->Tables[L"pose"] != nullptr) {
                __super::Tables->Add((gcnew BB_Crash::NewDataSet::poseDataTable(ds->Tables[L"pose"])));
            }
            this->DataSetName = ds->DataSetName;
            this->Prefix = ds->Prefix;
            this->Namespace = ds->Namespace;
            this->Locale = ds->Locale;
            this->CaseSensitive = ds->CaseSensitive;
            this->EnforceConstraints = ds->EnforceConstraints;
            this->Merge(ds, false, ::System::Data::MissingSchemaAction::Add);
            this->InitVars();
        }
        else {
            this->ReadXml(reader);
            this->InitVars();
        }
    }
    
    inline ::System::Xml::Schema::XmlSchema^  NewDataSet::GetSchemaSerializable() {
        ::System::IO::MemoryStream^  stream = (gcnew ::System::IO::MemoryStream());
        this->WriteXmlSchema((gcnew ::System::Xml::XmlTextWriter(stream, nullptr)));
        stream->Position = 0;
        return ::System::Xml::Schema::XmlSchema::Read((gcnew ::System::Xml::XmlTextReader(stream)), nullptr);
    }
    
    inline ::System::Void NewDataSet::InitVars() {
        this->InitVars(true);
    }
    
    inline ::System::Void NewDataSet::InitVars(::System::Boolean initTable) {
        this->tablesprite_type = (cli::safe_cast<BB_Crash::NewDataSet::sprite_typeDataTable^  >(__super::Tables[L"sprite_type"]));
        if (initTable == true) {
            if (this->tablesprite_type != nullptr) {
                this->tablesprite_type->InitVars();
            }
        }
        this->tableimages_list = (cli::safe_cast<BB_Crash::NewDataSet::images_listDataTable^  >(__super::Tables[L"images_list"]));
        if (initTable == true) {
            if (this->tableimages_list != nullptr) {
                this->tableimages_list->InitVars();
            }
        }
        this->tableimage_file = (cli::safe_cast<BB_Crash::NewDataSet::image_fileDataTable^  >(__super::Tables[L"image_file"]));
        if (initTable == true) {
            if (this->tableimage_file != nullptr) {
                this->tableimage_file->InitVars();
            }
        }
        this->tableanimations_list = (cli::safe_cast<BB_Crash::NewDataSet::animations_listDataTable^  >(__super::Tables[L"animations_list"]));
        if (initTable == true) {
            if (this->tableanimations_list != nullptr) {
                this->tableanimations_list->InitVars();
            }
        }
        this->tableanimation_state = (cli::safe_cast<BB_Crash::NewDataSet::animation_stateDataTable^  >(__super::Tables[L"animation_state"]));
        if (initTable == true) {
            if (this->tableanimation_state != nullptr) {
                this->tableanimation_state->InitVars();
            }
        }
        this->tableanimation_sequence = (cli::safe_cast<BB_Crash::NewDataSet::animation_sequenceDataTable^  >(__super::Tables[L"animation_sequence"]));
        if (initTable == true) {
            if (this->tableanimation_sequence != nullptr) {
                this->tableanimation_sequence->InitVars();
            }
        }
        this->tablepose = (cli::safe_cast<BB_Crash::NewDataSet::poseDataTable^  >(__super::Tables[L"pose"]));
        if (initTable == true) {
            if (this->tablepose != nullptr) {
                this->tablepose->InitVars();
            }
        }
        this->relationsprite_type_images_list = this->Relations[L"sprite_type_images_list"];
        this->relationimages_list_image_file = this->Relations[L"images_list_image_file"];
        this->relationsprite_type_animations_list = this->Relations[L"sprite_type_animations_list"];
        this->relationanimations_list_animation_state = this->Relations[L"animations_list_animation_state"];
        this->relationanimation_state_animation_sequence = this->Relations[L"animation_state_animation_sequence"];
        this->relationanimation_sequence_pose = this->Relations[L"animation_sequence_pose"];
    }
    
    inline ::System::Void NewDataSet::InitClass() {
        this->DataSetName = L"NewDataSet";
        this->Prefix = L"";
        this->Locale = (gcnew ::System::Globalization::CultureInfo(L""));
        this->EnforceConstraints = true;
        this->SchemaSerializationMode = ::System::Data::SchemaSerializationMode::IncludeSchema;
        this->tablesprite_type = (gcnew BB_Crash::NewDataSet::sprite_typeDataTable());
        __super::Tables->Add(this->tablesprite_type);
        this->tableimages_list = (gcnew BB_Crash::NewDataSet::images_listDataTable());
        __super::Tables->Add(this->tableimages_list);
        this->tableimage_file = (gcnew BB_Crash::NewDataSet::image_fileDataTable());
        __super::Tables->Add(this->tableimage_file);
        this->tableanimations_list = (gcnew BB_Crash::NewDataSet::animations_listDataTable());
        __super::Tables->Add(this->tableanimations_list);
        this->tableanimation_state = (gcnew BB_Crash::NewDataSet::animation_stateDataTable());
        __super::Tables->Add(this->tableanimation_state);
        this->tableanimation_sequence = (gcnew BB_Crash::NewDataSet::animation_sequenceDataTable());
        __super::Tables->Add(this->tableanimation_sequence);
        this->tablepose = (gcnew BB_Crash::NewDataSet::poseDataTable());
        __super::Tables->Add(this->tablepose);
        ::System::Data::ForeignKeyConstraint^  fkc;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"sprite_type_images_list", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablesprite_type->sprite_type_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableimages_list->sprite_type_IdColumn}));
        this->tableimages_list->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"images_list_image_file", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableimages_list->images_list_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableimage_file->images_list_IdColumn}));
        this->tableimage_file->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"sprite_type_animations_list", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablesprite_type->sprite_type_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableanimations_list->sprite_type_IdColumn}));
        this->tableanimations_list->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"animations_list_animation_state", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableanimations_list->animations_list_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableanimation_state->animations_list_IdColumn}));
        this->tableanimation_state->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"animation_state_animation_sequence", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableanimation_state->animation_state_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableanimation_sequence->animation_state_IdColumn}));
        this->tableanimation_sequence->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"animation_sequence_pose", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableanimation_sequence->animation_sequence_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablepose->animation_sequence_IdColumn}));
        this->tablepose->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        this->relationsprite_type_images_list = (gcnew ::System::Data::DataRelation(L"sprite_type_images_list", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablesprite_type->sprite_type_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableimages_list->sprite_type_IdColumn}, false));
        this->relationsprite_type_images_list->Nested = true;
        this->Relations->Add(this->relationsprite_type_images_list);
        this->relationimages_list_image_file = (gcnew ::System::Data::DataRelation(L"images_list_image_file", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableimages_list->images_list_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableimage_file->images_list_IdColumn}, false));
        this->relationimages_list_image_file->Nested = true;
        this->Relations->Add(this->relationimages_list_image_file);
        this->relationsprite_type_animations_list = (gcnew ::System::Data::DataRelation(L"sprite_type_animations_list", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablesprite_type->sprite_type_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableanimations_list->sprite_type_IdColumn}, false));
        this->relationsprite_type_animations_list->Nested = true;
        this->Relations->Add(this->relationsprite_type_animations_list);
        this->relationanimations_list_animation_state = (gcnew ::System::Data::DataRelation(L"animations_list_animation_state", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableanimations_list->animations_list_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableanimation_state->animations_list_IdColumn}, false));
        this->relationanimations_list_animation_state->Nested = true;
        this->Relations->Add(this->relationanimations_list_animation_state);
        this->relationanimation_state_animation_sequence = (gcnew ::System::Data::DataRelation(L"animation_state_animation_sequence", 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableanimation_state->animation_state_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableanimation_sequence->animation_state_IdColumn}, 
            false));
        this->relationanimation_state_animation_sequence->Nested = true;
        this->Relations->Add(this->relationanimation_state_animation_sequence);
        this->relationanimation_sequence_pose = (gcnew ::System::Data::DataRelation(L"animation_sequence_pose", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableanimation_sequence->animation_sequence_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablepose->animation_sequence_IdColumn}, false));
        this->relationanimation_sequence_pose->Nested = true;
        this->Relations->Add(this->relationanimation_sequence_pose);
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializesprite_type() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeimages_list() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeimage_file() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeanimations_list() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeanimation_state() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeanimation_sequence() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializepose() {
        return false;
    }
    
    inline ::System::Void NewDataSet::SchemaChanged(::System::Object^  sender, ::System::ComponentModel::CollectionChangeEventArgs^  e) {
        if (e->Action == ::System::ComponentModel::CollectionChangeAction::Remove) {
            this->InitVars();
        }
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::GetTypedDataSetSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        BB_Crash::NewDataSet^  ds = (gcnew BB_Crash::NewDataSet());
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        ::System::Xml::Schema::XmlSchemaAny^  any = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any->Namespace = ds->Namespace;
        sequence->Items->Add(any);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::sprite_typeDataTable::sprite_typeDataTable() {
        this->TableName = L"sprite_type";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::sprite_typeDataTable::sprite_typeDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::sprite_typeDataTable::sprite_typeDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::sprite_typeDataTable::widthColumn::get() {
        return this->columnwidth;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::sprite_typeDataTable::heightColumn::get() {
        return this->columnheight;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::sprite_typeDataTable::sprite_type_IdColumn::get() {
        return this->columnsprite_type_Id;
    }
    
    inline ::System::Int32 NewDataSet::sprite_typeDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline BB_Crash::NewDataSet::sprite_typeRow^  NewDataSet::sprite_typeDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<BB_Crash::NewDataSet::sprite_typeRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::sprite_typeDataTable::Addsprite_typeRow(BB_Crash::NewDataSet::sprite_typeRow^  row) {
        this->Rows->Add(row);
    }
    
    inline BB_Crash::NewDataSet::sprite_typeRow^  NewDataSet::sprite_typeDataTable::Addsprite_typeRow(System::UInt64 width, 
                System::UInt64 height) {
        BB_Crash::NewDataSet::sprite_typeRow^  rowsprite_typeRow = (cli::safe_cast<BB_Crash::NewDataSet::sprite_typeRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {width, height, nullptr};
        rowsprite_typeRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowsprite_typeRow);
        return rowsprite_typeRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::sprite_typeDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::sprite_typeDataTable::Clone() {
        BB_Crash::NewDataSet::sprite_typeDataTable^  cln = (cli::safe_cast<BB_Crash::NewDataSet::sprite_typeDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::sprite_typeDataTable::CreateInstance() {
        return (gcnew BB_Crash::NewDataSet::sprite_typeDataTable());
    }
    
    inline ::System::Void NewDataSet::sprite_typeDataTable::InitVars() {
        this->columnwidth = __super::Columns[L"width"];
        this->columnheight = __super::Columns[L"height"];
        this->columnsprite_type_Id = __super::Columns[L"sprite_type_Id"];
    }
    
    inline ::System::Void NewDataSet::sprite_typeDataTable::InitClass() {
        this->columnwidth = (gcnew ::System::Data::DataColumn(L"width", ::System::UInt64::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnwidth);
        this->columnheight = (gcnew ::System::Data::DataColumn(L"height", ::System::UInt64::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnheight);
        this->columnsprite_type_Id = (gcnew ::System::Data::DataColumn(L"sprite_type_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnsprite_type_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnsprite_type_Id}, 
                true)));
        this->columnwidth->AllowDBNull = false;
        this->columnheight->AllowDBNull = false;
        this->columnsprite_type_Id->AutoIncrement = true;
        this->columnsprite_type_Id->AllowDBNull = false;
        this->columnsprite_type_Id->Unique = true;
    }
    
    inline BB_Crash::NewDataSet::sprite_typeRow^  NewDataSet::sprite_typeDataTable::Newsprite_typeRow() {
        return (cli::safe_cast<BB_Crash::NewDataSet::sprite_typeRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::sprite_typeDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew BB_Crash::NewDataSet::sprite_typeRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::sprite_typeDataTable::GetRowType() {
        return BB_Crash::NewDataSet::sprite_typeRow::typeid;
    }
    
    inline ::System::Void NewDataSet::sprite_typeDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->sprite_typeRowChanged(this, (gcnew BB_Crash::NewDataSet::sprite_typeRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::sprite_typeRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::sprite_typeDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->sprite_typeRowChanging(this, (gcnew BB_Crash::NewDataSet::sprite_typeRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::sprite_typeRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::sprite_typeDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->sprite_typeRowDeleted(this, (gcnew BB_Crash::NewDataSet::sprite_typeRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::sprite_typeRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::sprite_typeDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->sprite_typeRowDeleting(this, (gcnew BB_Crash::NewDataSet::sprite_typeRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::sprite_typeRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::sprite_typeDataTable::Removesprite_typeRow(BB_Crash::NewDataSet::sprite_typeRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::sprite_typeDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        BB_Crash::NewDataSet^  ds = (gcnew BB_Crash::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"sprite_typeDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::images_listDataTable::images_listDataTable() {
        this->TableName = L"images_list";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::images_listDataTable::images_listDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::images_listDataTable::images_listDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::images_listDataTable::images_list_IdColumn::get() {
        return this->columnimages_list_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::images_listDataTable::sprite_type_IdColumn::get() {
        return this->columnsprite_type_Id;
    }
    
    inline ::System::Int32 NewDataSet::images_listDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline BB_Crash::NewDataSet::images_listRow^  NewDataSet::images_listDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<BB_Crash::NewDataSet::images_listRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::images_listDataTable::Addimages_listRow(BB_Crash::NewDataSet::images_listRow^  row) {
        this->Rows->Add(row);
    }
    
    inline BB_Crash::NewDataSet::images_listRow^  NewDataSet::images_listDataTable::Addimages_listRow(BB_Crash::NewDataSet::sprite_typeRow^  parentsprite_typeRowBysprite_type_images_list) {
        BB_Crash::NewDataSet::images_listRow^  rowimages_listRow = (cli::safe_cast<BB_Crash::NewDataSet::images_listRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(2) {nullptr, nullptr};
        if (parentsprite_typeRowBysprite_type_images_list != nullptr) {
            columnValuesArray[1] = parentsprite_typeRowBysprite_type_images_list[2];
        }
        rowimages_listRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowimages_listRow);
        return rowimages_listRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::images_listDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::images_listDataTable::Clone() {
        BB_Crash::NewDataSet::images_listDataTable^  cln = (cli::safe_cast<BB_Crash::NewDataSet::images_listDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::images_listDataTable::CreateInstance() {
        return (gcnew BB_Crash::NewDataSet::images_listDataTable());
    }
    
    inline ::System::Void NewDataSet::images_listDataTable::InitVars() {
        this->columnimages_list_Id = __super::Columns[L"images_list_Id"];
        this->columnsprite_type_Id = __super::Columns[L"sprite_type_Id"];
    }
    
    inline ::System::Void NewDataSet::images_listDataTable::InitClass() {
        this->columnimages_list_Id = (gcnew ::System::Data::DataColumn(L"images_list_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnimages_list_Id);
        this->columnsprite_type_Id = (gcnew ::System::Data::DataColumn(L"sprite_type_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnsprite_type_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnimages_list_Id}, 
                true)));
        this->columnimages_list_Id->AutoIncrement = true;
        this->columnimages_list_Id->AllowDBNull = false;
        this->columnimages_list_Id->Unique = true;
    }
    
    inline BB_Crash::NewDataSet::images_listRow^  NewDataSet::images_listDataTable::Newimages_listRow() {
        return (cli::safe_cast<BB_Crash::NewDataSet::images_listRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::images_listDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew BB_Crash::NewDataSet::images_listRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::images_listDataTable::GetRowType() {
        return BB_Crash::NewDataSet::images_listRow::typeid;
    }
    
    inline ::System::Void NewDataSet::images_listDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->images_listRowChanged(this, (gcnew BB_Crash::NewDataSet::images_listRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::images_listRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::images_listDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->images_listRowChanging(this, (gcnew BB_Crash::NewDataSet::images_listRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::images_listRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::images_listDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->images_listRowDeleted(this, (gcnew BB_Crash::NewDataSet::images_listRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::images_listRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::images_listDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->images_listRowDeleting(this, (gcnew BB_Crash::NewDataSet::images_listRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::images_listRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::images_listDataTable::Removeimages_listRow(BB_Crash::NewDataSet::images_listRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::images_listDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        BB_Crash::NewDataSet^  ds = (gcnew BB_Crash::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"images_listDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::image_fileDataTable::image_fileDataTable() {
        this->TableName = L"image_file";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::image_fileDataTable::image_fileDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::image_fileDataTable::image_fileDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::image_fileDataTable::idColumn::get() {
        return this->columnid;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::image_fileDataTable::file_nameColumn::get() {
        return this->columnfile_name;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::image_fileDataTable::images_list_IdColumn::get() {
        return this->columnimages_list_Id;
    }
    
    inline ::System::Int32 NewDataSet::image_fileDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline BB_Crash::NewDataSet::image_fileRow^  NewDataSet::image_fileDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<BB_Crash::NewDataSet::image_fileRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::image_fileDataTable::Addimage_fileRow(BB_Crash::NewDataSet::image_fileRow^  row) {
        this->Rows->Add(row);
    }
    
    inline BB_Crash::NewDataSet::image_fileRow^  NewDataSet::image_fileDataTable::Addimage_fileRow(System::UInt64 id, System::String^  file_name, 
                BB_Crash::NewDataSet::images_listRow^  parentimages_listRowByimages_list_image_file) {
        BB_Crash::NewDataSet::image_fileRow^  rowimage_fileRow = (cli::safe_cast<BB_Crash::NewDataSet::image_fileRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {id, file_name, nullptr};
        if (parentimages_listRowByimages_list_image_file != nullptr) {
            columnValuesArray[2] = parentimages_listRowByimages_list_image_file[0];
        }
        rowimage_fileRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowimage_fileRow);
        return rowimage_fileRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::image_fileDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::image_fileDataTable::Clone() {
        BB_Crash::NewDataSet::image_fileDataTable^  cln = (cli::safe_cast<BB_Crash::NewDataSet::image_fileDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::image_fileDataTable::CreateInstance() {
        return (gcnew BB_Crash::NewDataSet::image_fileDataTable());
    }
    
    inline ::System::Void NewDataSet::image_fileDataTable::InitVars() {
        this->columnid = __super::Columns[L"id"];
        this->columnfile_name = __super::Columns[L"file_name"];
        this->columnimages_list_Id = __super::Columns[L"images_list_Id"];
    }
    
    inline ::System::Void NewDataSet::image_fileDataTable::InitClass() {
        this->columnid = (gcnew ::System::Data::DataColumn(L"id", ::System::UInt64::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnid);
        this->columnfile_name = (gcnew ::System::Data::DataColumn(L"file_name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnfile_name);
        this->columnimages_list_Id = (gcnew ::System::Data::DataColumn(L"images_list_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnimages_list_Id);
        this->columnid->Namespace = L"";
        this->columnfile_name->Namespace = L"";
    }
    
    inline BB_Crash::NewDataSet::image_fileRow^  NewDataSet::image_fileDataTable::Newimage_fileRow() {
        return (cli::safe_cast<BB_Crash::NewDataSet::image_fileRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::image_fileDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew BB_Crash::NewDataSet::image_fileRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::image_fileDataTable::GetRowType() {
        return BB_Crash::NewDataSet::image_fileRow::typeid;
    }
    
    inline ::System::Void NewDataSet::image_fileDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->image_fileRowChanged(this, (gcnew BB_Crash::NewDataSet::image_fileRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::image_fileRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::image_fileDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->image_fileRowChanging(this, (gcnew BB_Crash::NewDataSet::image_fileRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::image_fileRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::image_fileDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->image_fileRowDeleted(this, (gcnew BB_Crash::NewDataSet::image_fileRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::image_fileRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::image_fileDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->image_fileRowDeleting(this, (gcnew BB_Crash::NewDataSet::image_fileRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::image_fileRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::image_fileDataTable::Removeimage_fileRow(BB_Crash::NewDataSet::image_fileRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::image_fileDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        BB_Crash::NewDataSet^  ds = (gcnew BB_Crash::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"image_fileDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::animations_listDataTable::animations_listDataTable() {
        this->TableName = L"animations_list";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::animations_listDataTable::animations_listDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::animations_listDataTable::animations_listDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::animations_listDataTable::animations_list_IdColumn::get() {
        return this->columnanimations_list_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::animations_listDataTable::sprite_type_IdColumn::get() {
        return this->columnsprite_type_Id;
    }
    
    inline ::System::Int32 NewDataSet::animations_listDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline BB_Crash::NewDataSet::animations_listRow^  NewDataSet::animations_listDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<BB_Crash::NewDataSet::animations_listRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::animations_listDataTable::Addanimations_listRow(BB_Crash::NewDataSet::animations_listRow^  row) {
        this->Rows->Add(row);
    }
    
    inline BB_Crash::NewDataSet::animations_listRow^  NewDataSet::animations_listDataTable::Addanimations_listRow(BB_Crash::NewDataSet::sprite_typeRow^  parentsprite_typeRowBysprite_type_animations_list) {
        BB_Crash::NewDataSet::animations_listRow^  rowanimations_listRow = (cli::safe_cast<BB_Crash::NewDataSet::animations_listRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(2) {nullptr, nullptr};
        if (parentsprite_typeRowBysprite_type_animations_list != nullptr) {
            columnValuesArray[1] = parentsprite_typeRowBysprite_type_animations_list[2];
        }
        rowanimations_listRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowanimations_listRow);
        return rowanimations_listRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::animations_listDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::animations_listDataTable::Clone() {
        BB_Crash::NewDataSet::animations_listDataTable^  cln = (cli::safe_cast<BB_Crash::NewDataSet::animations_listDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::animations_listDataTable::CreateInstance() {
        return (gcnew BB_Crash::NewDataSet::animations_listDataTable());
    }
    
    inline ::System::Void NewDataSet::animations_listDataTable::InitVars() {
        this->columnanimations_list_Id = __super::Columns[L"animations_list_Id"];
        this->columnsprite_type_Id = __super::Columns[L"sprite_type_Id"];
    }
    
    inline ::System::Void NewDataSet::animations_listDataTable::InitClass() {
        this->columnanimations_list_Id = (gcnew ::System::Data::DataColumn(L"animations_list_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnanimations_list_Id);
        this->columnsprite_type_Id = (gcnew ::System::Data::DataColumn(L"sprite_type_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnsprite_type_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnanimations_list_Id}, 
                true)));
        this->columnanimations_list_Id->AutoIncrement = true;
        this->columnanimations_list_Id->AllowDBNull = false;
        this->columnanimations_list_Id->Unique = true;
    }
    
    inline BB_Crash::NewDataSet::animations_listRow^  NewDataSet::animations_listDataTable::Newanimations_listRow() {
        return (cli::safe_cast<BB_Crash::NewDataSet::animations_listRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::animations_listDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew BB_Crash::NewDataSet::animations_listRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::animations_listDataTable::GetRowType() {
        return BB_Crash::NewDataSet::animations_listRow::typeid;
    }
    
    inline ::System::Void NewDataSet::animations_listDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->animations_listRowChanged(this, (gcnew BB_Crash::NewDataSet::animations_listRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::animations_listRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::animations_listDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->animations_listRowChanging(this, (gcnew BB_Crash::NewDataSet::animations_listRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::animations_listRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::animations_listDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->animations_listRowDeleted(this, (gcnew BB_Crash::NewDataSet::animations_listRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::animations_listRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::animations_listDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->animations_listRowDeleting(this, (gcnew BB_Crash::NewDataSet::animations_listRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::animations_listRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::animations_listDataTable::Removeanimations_listRow(BB_Crash::NewDataSet::animations_listRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::animations_listDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        BB_Crash::NewDataSet^  ds = (gcnew BB_Crash::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"animations_listDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::animation_stateDataTable::animation_stateDataTable() {
        this->TableName = L"animation_state";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::animation_stateDataTable::animation_stateDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::animation_stateDataTable::animation_stateDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::animation_stateDataTable::stateColumn::get() {
        return this->columnstate;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::animation_stateDataTable::animation_state_IdColumn::get() {
        return this->columnanimation_state_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::animation_stateDataTable::animations_list_IdColumn::get() {
        return this->columnanimations_list_Id;
    }
    
    inline ::System::Int32 NewDataSet::animation_stateDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline BB_Crash::NewDataSet::animation_stateRow^  NewDataSet::animation_stateDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<BB_Crash::NewDataSet::animation_stateRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::animation_stateDataTable::Addanimation_stateRow(BB_Crash::NewDataSet::animation_stateRow^  row) {
        this->Rows->Add(row);
    }
    
    inline BB_Crash::NewDataSet::animation_stateRow^  NewDataSet::animation_stateDataTable::Addanimation_stateRow(System::String^  state, 
                BB_Crash::NewDataSet::animations_listRow^  parentanimations_listRowByanimations_list_animation_state) {
        BB_Crash::NewDataSet::animation_stateRow^  rowanimation_stateRow = (cli::safe_cast<BB_Crash::NewDataSet::animation_stateRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {state, nullptr, nullptr};
        if (parentanimations_listRowByanimations_list_animation_state != nullptr) {
            columnValuesArray[2] = parentanimations_listRowByanimations_list_animation_state[0];
        }
        rowanimation_stateRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowanimation_stateRow);
        return rowanimation_stateRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::animation_stateDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::animation_stateDataTable::Clone() {
        BB_Crash::NewDataSet::animation_stateDataTable^  cln = (cli::safe_cast<BB_Crash::NewDataSet::animation_stateDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::animation_stateDataTable::CreateInstance() {
        return (gcnew BB_Crash::NewDataSet::animation_stateDataTable());
    }
    
    inline ::System::Void NewDataSet::animation_stateDataTable::InitVars() {
        this->columnstate = __super::Columns[L"state"];
        this->columnanimation_state_Id = __super::Columns[L"animation_state_Id"];
        this->columnanimations_list_Id = __super::Columns[L"animations_list_Id"];
    }
    
    inline ::System::Void NewDataSet::animation_stateDataTable::InitClass() {
        this->columnstate = (gcnew ::System::Data::DataColumn(L"state", ::System::String::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnstate);
        this->columnanimation_state_Id = (gcnew ::System::Data::DataColumn(L"animation_state_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnanimation_state_Id);
        this->columnanimations_list_Id = (gcnew ::System::Data::DataColumn(L"animations_list_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnanimations_list_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnanimation_state_Id}, 
                true)));
        this->columnstate->AllowDBNull = false;
        this->columnanimation_state_Id->AutoIncrement = true;
        this->columnanimation_state_Id->AllowDBNull = false;
        this->columnanimation_state_Id->Unique = true;
    }
    
    inline BB_Crash::NewDataSet::animation_stateRow^  NewDataSet::animation_stateDataTable::Newanimation_stateRow() {
        return (cli::safe_cast<BB_Crash::NewDataSet::animation_stateRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::animation_stateDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew BB_Crash::NewDataSet::animation_stateRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::animation_stateDataTable::GetRowType() {
        return BB_Crash::NewDataSet::animation_stateRow::typeid;
    }
    
    inline ::System::Void NewDataSet::animation_stateDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->animation_stateRowChanged(this, (gcnew BB_Crash::NewDataSet::animation_stateRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::animation_stateRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::animation_stateDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->animation_stateRowChanging(this, (gcnew BB_Crash::NewDataSet::animation_stateRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::animation_stateRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::animation_stateDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->animation_stateRowDeleted(this, (gcnew BB_Crash::NewDataSet::animation_stateRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::animation_stateRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::animation_stateDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->animation_stateRowDeleting(this, (gcnew BB_Crash::NewDataSet::animation_stateRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::animation_stateRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::animation_stateDataTable::Removeanimation_stateRow(BB_Crash::NewDataSet::animation_stateRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::animation_stateDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        BB_Crash::NewDataSet^  ds = (gcnew BB_Crash::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"animation_stateDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::animation_sequenceDataTable::animation_sequenceDataTable() {
        this->TableName = L"animation_sequence";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::animation_sequenceDataTable::animation_sequenceDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::animation_sequenceDataTable::animation_sequenceDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::animation_sequenceDataTable::animation_sequence_IdColumn::get() {
        return this->columnanimation_sequence_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::animation_sequenceDataTable::animation_state_IdColumn::get() {
        return this->columnanimation_state_Id;
    }
    
    inline ::System::Int32 NewDataSet::animation_sequenceDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline BB_Crash::NewDataSet::animation_sequenceRow^  NewDataSet::animation_sequenceDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<BB_Crash::NewDataSet::animation_sequenceRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::animation_sequenceDataTable::Addanimation_sequenceRow(BB_Crash::NewDataSet::animation_sequenceRow^  row) {
        this->Rows->Add(row);
    }
    
    inline BB_Crash::NewDataSet::animation_sequenceRow^  NewDataSet::animation_sequenceDataTable::Addanimation_sequenceRow(
                BB_Crash::NewDataSet::animation_stateRow^  parentanimation_stateRowByanimation_state_animation_sequence) {
        BB_Crash::NewDataSet::animation_sequenceRow^  rowanimation_sequenceRow = (cli::safe_cast<BB_Crash::NewDataSet::animation_sequenceRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(2) {nullptr, nullptr};
        if (parentanimation_stateRowByanimation_state_animation_sequence != nullptr) {
            columnValuesArray[1] = parentanimation_stateRowByanimation_state_animation_sequence[1];
        }
        rowanimation_sequenceRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowanimation_sequenceRow);
        return rowanimation_sequenceRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::animation_sequenceDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::animation_sequenceDataTable::Clone() {
        BB_Crash::NewDataSet::animation_sequenceDataTable^  cln = (cli::safe_cast<BB_Crash::NewDataSet::animation_sequenceDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::animation_sequenceDataTable::CreateInstance() {
        return (gcnew BB_Crash::NewDataSet::animation_sequenceDataTable());
    }
    
    inline ::System::Void NewDataSet::animation_sequenceDataTable::InitVars() {
        this->columnanimation_sequence_Id = __super::Columns[L"animation_sequence_Id"];
        this->columnanimation_state_Id = __super::Columns[L"animation_state_Id"];
    }
    
    inline ::System::Void NewDataSet::animation_sequenceDataTable::InitClass() {
        this->columnanimation_sequence_Id = (gcnew ::System::Data::DataColumn(L"animation_sequence_Id", ::System::Int32::typeid, 
            nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnanimation_sequence_Id);
        this->columnanimation_state_Id = (gcnew ::System::Data::DataColumn(L"animation_state_Id", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnanimation_state_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnanimation_sequence_Id}, 
                true)));
        this->columnanimation_sequence_Id->AutoIncrement = true;
        this->columnanimation_sequence_Id->AllowDBNull = false;
        this->columnanimation_sequence_Id->Unique = true;
    }
    
    inline BB_Crash::NewDataSet::animation_sequenceRow^  NewDataSet::animation_sequenceDataTable::Newanimation_sequenceRow() {
        return (cli::safe_cast<BB_Crash::NewDataSet::animation_sequenceRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::animation_sequenceDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew BB_Crash::NewDataSet::animation_sequenceRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::animation_sequenceDataTable::GetRowType() {
        return BB_Crash::NewDataSet::animation_sequenceRow::typeid;
    }
    
    inline ::System::Void NewDataSet::animation_sequenceDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->animation_sequenceRowChanged(this, (gcnew BB_Crash::NewDataSet::animation_sequenceRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::animation_sequenceRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::animation_sequenceDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->animation_sequenceRowChanging(this, (gcnew BB_Crash::NewDataSet::animation_sequenceRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::animation_sequenceRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::animation_sequenceDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->animation_sequenceRowDeleted(this, (gcnew BB_Crash::NewDataSet::animation_sequenceRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::animation_sequenceRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::animation_sequenceDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->animation_sequenceRowDeleting(this, (gcnew BB_Crash::NewDataSet::animation_sequenceRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::animation_sequenceRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::animation_sequenceDataTable::Removeanimation_sequenceRow(BB_Crash::NewDataSet::animation_sequenceRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::animation_sequenceDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        BB_Crash::NewDataSet^  ds = (gcnew BB_Crash::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"animation_sequenceDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::poseDataTable::poseDataTable() {
        this->TableName = L"pose";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::poseDataTable::poseDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::poseDataTable::poseDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::poseDataTable::image_idColumn::get() {
        return this->columnimage_id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::poseDataTable::durationColumn::get() {
        return this->columnduration;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::poseDataTable::animation_sequence_IdColumn::get() {
        return this->columnanimation_sequence_Id;
    }
    
    inline ::System::Int32 NewDataSet::poseDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline BB_Crash::NewDataSet::poseRow^  NewDataSet::poseDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<BB_Crash::NewDataSet::poseRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::poseDataTable::AddposeRow(BB_Crash::NewDataSet::poseRow^  row) {
        this->Rows->Add(row);
    }
    
    inline BB_Crash::NewDataSet::poseRow^  NewDataSet::poseDataTable::AddposeRow(System::UInt64 image_id, System::UInt64 duration, 
                BB_Crash::NewDataSet::animation_sequenceRow^  parentanimation_sequenceRowByanimation_sequence_pose) {
        BB_Crash::NewDataSet::poseRow^  rowposeRow = (cli::safe_cast<BB_Crash::NewDataSet::poseRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {image_id, duration, 
            nullptr};
        if (parentanimation_sequenceRowByanimation_sequence_pose != nullptr) {
            columnValuesArray[2] = parentanimation_sequenceRowByanimation_sequence_pose[0];
        }
        rowposeRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowposeRow);
        return rowposeRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::poseDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::poseDataTable::Clone() {
        BB_Crash::NewDataSet::poseDataTable^  cln = (cli::safe_cast<BB_Crash::NewDataSet::poseDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::poseDataTable::CreateInstance() {
        return (gcnew BB_Crash::NewDataSet::poseDataTable());
    }
    
    inline ::System::Void NewDataSet::poseDataTable::InitVars() {
        this->columnimage_id = __super::Columns[L"image_id"];
        this->columnduration = __super::Columns[L"duration"];
        this->columnanimation_sequence_Id = __super::Columns[L"animation_sequence_Id"];
    }
    
    inline ::System::Void NewDataSet::poseDataTable::InitClass() {
        this->columnimage_id = (gcnew ::System::Data::DataColumn(L"image_id", ::System::UInt64::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnimage_id);
        this->columnduration = (gcnew ::System::Data::DataColumn(L"duration", ::System::UInt64::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnduration);
        this->columnanimation_sequence_Id = (gcnew ::System::Data::DataColumn(L"animation_sequence_Id", ::System::Int32::typeid, 
            nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnanimation_sequence_Id);
        this->columnimage_id->Namespace = L"";
        this->columnduration->Namespace = L"";
    }
    
    inline BB_Crash::NewDataSet::poseRow^  NewDataSet::poseDataTable::NewposeRow() {
        return (cli::safe_cast<BB_Crash::NewDataSet::poseRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::poseDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew BB_Crash::NewDataSet::poseRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::poseDataTable::GetRowType() {
        return BB_Crash::NewDataSet::poseRow::typeid;
    }
    
    inline ::System::Void NewDataSet::poseDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->poseRowChanged(this, (gcnew BB_Crash::NewDataSet::poseRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::poseRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::poseDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->poseRowChanging(this, (gcnew BB_Crash::NewDataSet::poseRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::poseRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::poseDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->poseRowDeleted(this, (gcnew BB_Crash::NewDataSet::poseRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::poseRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::poseDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->poseRowDeleting(this, (gcnew BB_Crash::NewDataSet::poseRowChangeEvent((cli::safe_cast<BB_Crash::NewDataSet::poseRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::poseDataTable::RemoveposeRow(BB_Crash::NewDataSet::poseRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::poseDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        BB_Crash::NewDataSet^  ds = (gcnew BB_Crash::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"poseDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::sprite_typeRow::sprite_typeRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tablesprite_type = (cli::safe_cast<BB_Crash::NewDataSet::sprite_typeDataTable^  >(this->Table));
    }
    
    inline System::UInt64 NewDataSet::sprite_typeRow::width::get() {
        return (cli::safe_cast<::System::UInt64 >(this[this->tablesprite_type->widthColumn]));
    }
    inline System::Void NewDataSet::sprite_typeRow::width::set(System::UInt64 value) {
        this[this->tablesprite_type->widthColumn] = value;
    }
    
    inline System::UInt64 NewDataSet::sprite_typeRow::height::get() {
        return (cli::safe_cast<::System::UInt64 >(this[this->tablesprite_type->heightColumn]));
    }
    inline System::Void NewDataSet::sprite_typeRow::height::set(System::UInt64 value) {
        this[this->tablesprite_type->heightColumn] = value;
    }
    
    inline System::Int32 NewDataSet::sprite_typeRow::sprite_type_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablesprite_type->sprite_type_IdColumn]));
    }
    inline System::Void NewDataSet::sprite_typeRow::sprite_type_Id::set(System::Int32 value) {
        this[this->tablesprite_type->sprite_type_IdColumn] = value;
    }
    
    inline cli::array< BB_Crash::NewDataSet::images_listRow^  >^  NewDataSet::sprite_typeRow::Getimages_listRows() {
        if (this->Table->ChildRelations[L"sprite_type_images_list"] == nullptr) {
            return gcnew cli::array< BB_Crash::NewDataSet::images_listRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< BB_Crash::NewDataSet::images_listRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"sprite_type_images_list"])));
        }
    }
    
    inline cli::array< BB_Crash::NewDataSet::animations_listRow^  >^  NewDataSet::sprite_typeRow::Getanimations_listRows() {
        if (this->Table->ChildRelations[L"sprite_type_animations_list"] == nullptr) {
            return gcnew cli::array< BB_Crash::NewDataSet::animations_listRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< BB_Crash::NewDataSet::animations_listRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"sprite_type_animations_list"])));
        }
    }
    
    
    inline NewDataSet::images_listRow::images_listRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableimages_list = (cli::safe_cast<BB_Crash::NewDataSet::images_listDataTable^  >(this->Table));
    }
    
    inline System::Int32 NewDataSet::images_listRow::images_list_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableimages_list->images_list_IdColumn]));
    }
    inline System::Void NewDataSet::images_listRow::images_list_Id::set(System::Int32 value) {
        this[this->tableimages_list->images_list_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::images_listRow::sprite_type_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableimages_list->sprite_type_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'sprite_type_Id\' in table \'images_list\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::images_listRow::sprite_type_Id::set(System::Int32 value) {
        this[this->tableimages_list->sprite_type_IdColumn] = value;
    }
    
    inline BB_Crash::NewDataSet::sprite_typeRow^  NewDataSet::images_listRow::sprite_typeRow::get() {
        return (cli::safe_cast<BB_Crash::NewDataSet::sprite_typeRow^  >(this->GetParentRow(this->Table->ParentRelations[L"sprite_type_images_list"])));
    }
    inline System::Void NewDataSet::images_listRow::sprite_typeRow::set(BB_Crash::NewDataSet::sprite_typeRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"sprite_type_images_list"]);
    }
    
    inline ::System::Boolean NewDataSet::images_listRow::Issprite_type_IdNull() {
        return this->IsNull(this->tableimages_list->sprite_type_IdColumn);
    }
    
    inline ::System::Void NewDataSet::images_listRow::Setsprite_type_IdNull() {
        this[this->tableimages_list->sprite_type_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< BB_Crash::NewDataSet::image_fileRow^  >^  NewDataSet::images_listRow::Getimage_fileRows() {
        if (this->Table->ChildRelations[L"images_list_image_file"] == nullptr) {
            return gcnew cli::array< BB_Crash::NewDataSet::image_fileRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< BB_Crash::NewDataSet::image_fileRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"images_list_image_file"])));
        }
    }
    
    
    inline NewDataSet::image_fileRow::image_fileRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableimage_file = (cli::safe_cast<BB_Crash::NewDataSet::image_fileDataTable^  >(this->Table));
    }
    
    inline System::UInt64 NewDataSet::image_fileRow::id::get() {
        try {
            return (cli::safe_cast<::System::UInt64 >(this[this->tableimage_file->idColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'id\' in table \'image_file\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::image_fileRow::id::set(System::UInt64 value) {
        this[this->tableimage_file->idColumn] = value;
    }
    
    inline System::String^  NewDataSet::image_fileRow::file_name::get() {
        try {
            return (cli::safe_cast<::System::String^  >(this[this->tableimage_file->file_nameColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'file_name\' in table \'image_file\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::image_fileRow::file_name::set(System::String^  value) {
        this[this->tableimage_file->file_nameColumn] = value;
    }
    
    inline System::Int32 NewDataSet::image_fileRow::images_list_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableimage_file->images_list_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'images_list_Id\' in table \'image_file\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::image_fileRow::images_list_Id::set(System::Int32 value) {
        this[this->tableimage_file->images_list_IdColumn] = value;
    }
    
    inline BB_Crash::NewDataSet::images_listRow^  NewDataSet::image_fileRow::images_listRow::get() {
        return (cli::safe_cast<BB_Crash::NewDataSet::images_listRow^  >(this->GetParentRow(this->Table->ParentRelations[L"images_list_image_file"])));
    }
    inline System::Void NewDataSet::image_fileRow::images_listRow::set(BB_Crash::NewDataSet::images_listRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"images_list_image_file"]);
    }
    
    inline ::System::Boolean NewDataSet::image_fileRow::IsidNull() {
        return this->IsNull(this->tableimage_file->idColumn);
    }
    
    inline ::System::Void NewDataSet::image_fileRow::SetidNull() {
        this[this->tableimage_file->idColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::image_fileRow::Isfile_nameNull() {
        return this->IsNull(this->tableimage_file->file_nameColumn);
    }
    
    inline ::System::Void NewDataSet::image_fileRow::Setfile_nameNull() {
        this[this->tableimage_file->file_nameColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::image_fileRow::Isimages_list_IdNull() {
        return this->IsNull(this->tableimage_file->images_list_IdColumn);
    }
    
    inline ::System::Void NewDataSet::image_fileRow::Setimages_list_IdNull() {
        this[this->tableimage_file->images_list_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::animations_listRow::animations_listRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableanimations_list = (cli::safe_cast<BB_Crash::NewDataSet::animations_listDataTable^  >(this->Table));
    }
    
    inline System::Int32 NewDataSet::animations_listRow::animations_list_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableanimations_list->animations_list_IdColumn]));
    }
    inline System::Void NewDataSet::animations_listRow::animations_list_Id::set(System::Int32 value) {
        this[this->tableanimations_list->animations_list_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::animations_listRow::sprite_type_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableanimations_list->sprite_type_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'sprite_type_Id\' in table \'animations_list\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::animations_listRow::sprite_type_Id::set(System::Int32 value) {
        this[this->tableanimations_list->sprite_type_IdColumn] = value;
    }
    
    inline BB_Crash::NewDataSet::sprite_typeRow^  NewDataSet::animations_listRow::sprite_typeRow::get() {
        return (cli::safe_cast<BB_Crash::NewDataSet::sprite_typeRow^  >(this->GetParentRow(this->Table->ParentRelations[L"sprite_type_animations_list"])));
    }
    inline System::Void NewDataSet::animations_listRow::sprite_typeRow::set(BB_Crash::NewDataSet::sprite_typeRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"sprite_type_animations_list"]);
    }
    
    inline ::System::Boolean NewDataSet::animations_listRow::Issprite_type_IdNull() {
        return this->IsNull(this->tableanimations_list->sprite_type_IdColumn);
    }
    
    inline ::System::Void NewDataSet::animations_listRow::Setsprite_type_IdNull() {
        this[this->tableanimations_list->sprite_type_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< BB_Crash::NewDataSet::animation_stateRow^  >^  NewDataSet::animations_listRow::Getanimation_stateRows() {
        if (this->Table->ChildRelations[L"animations_list_animation_state"] == nullptr) {
            return gcnew cli::array< BB_Crash::NewDataSet::animation_stateRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< BB_Crash::NewDataSet::animation_stateRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"animations_list_animation_state"])));
        }
    }
    
    
    inline NewDataSet::animation_stateRow::animation_stateRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableanimation_state = (cli::safe_cast<BB_Crash::NewDataSet::animation_stateDataTable^  >(this->Table));
    }
    
    inline System::String^  NewDataSet::animation_stateRow::state::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tableanimation_state->stateColumn]));
    }
    inline System::Void NewDataSet::animation_stateRow::state::set(System::String^  value) {
        this[this->tableanimation_state->stateColumn] = value;
    }
    
    inline System::Int32 NewDataSet::animation_stateRow::animation_state_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableanimation_state->animation_state_IdColumn]));
    }
    inline System::Void NewDataSet::animation_stateRow::animation_state_Id::set(System::Int32 value) {
        this[this->tableanimation_state->animation_state_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::animation_stateRow::animations_list_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableanimation_state->animations_list_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'animations_list_Id\' in table \'animation_state\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::animation_stateRow::animations_list_Id::set(System::Int32 value) {
        this[this->tableanimation_state->animations_list_IdColumn] = value;
    }
    
    inline BB_Crash::NewDataSet::animations_listRow^  NewDataSet::animation_stateRow::animations_listRow::get() {
        return (cli::safe_cast<BB_Crash::NewDataSet::animations_listRow^  >(this->GetParentRow(this->Table->ParentRelations[L"animations_list_animation_state"])));
    }
    inline System::Void NewDataSet::animation_stateRow::animations_listRow::set(BB_Crash::NewDataSet::animations_listRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"animations_list_animation_state"]);
    }
    
    inline ::System::Boolean NewDataSet::animation_stateRow::Isanimations_list_IdNull() {
        return this->IsNull(this->tableanimation_state->animations_list_IdColumn);
    }
    
    inline ::System::Void NewDataSet::animation_stateRow::Setanimations_list_IdNull() {
        this[this->tableanimation_state->animations_list_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< BB_Crash::NewDataSet::animation_sequenceRow^  >^  NewDataSet::animation_stateRow::Getanimation_sequenceRows() {
        if (this->Table->ChildRelations[L"animation_state_animation_sequence"] == nullptr) {
            return gcnew cli::array< BB_Crash::NewDataSet::animation_sequenceRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< BB_Crash::NewDataSet::animation_sequenceRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"animation_state_animation_sequence"])));
        }
    }
    
    
    inline NewDataSet::animation_sequenceRow::animation_sequenceRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableanimation_sequence = (cli::safe_cast<BB_Crash::NewDataSet::animation_sequenceDataTable^  >(this->Table));
    }
    
    inline System::Int32 NewDataSet::animation_sequenceRow::animation_sequence_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableanimation_sequence->animation_sequence_IdColumn]));
    }
    inline System::Void NewDataSet::animation_sequenceRow::animation_sequence_Id::set(System::Int32 value) {
        this[this->tableanimation_sequence->animation_sequence_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::animation_sequenceRow::animation_state_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableanimation_sequence->animation_state_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'animation_state_Id\' in table \'animation_sequence\' is DBNull" 
L".", 
                e));
        }
    }
    inline System::Void NewDataSet::animation_sequenceRow::animation_state_Id::set(System::Int32 value) {
        this[this->tableanimation_sequence->animation_state_IdColumn] = value;
    }
    
    inline BB_Crash::NewDataSet::animation_stateRow^  NewDataSet::animation_sequenceRow::animation_stateRow::get() {
        return (cli::safe_cast<BB_Crash::NewDataSet::animation_stateRow^  >(this->GetParentRow(this->Table->ParentRelations[L"animation_state_animation_sequence"])));
    }
    inline System::Void NewDataSet::animation_sequenceRow::animation_stateRow::set(BB_Crash::NewDataSet::animation_stateRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"animation_state_animation_sequence"]);
    }
    
    inline ::System::Boolean NewDataSet::animation_sequenceRow::Isanimation_state_IdNull() {
        return this->IsNull(this->tableanimation_sequence->animation_state_IdColumn);
    }
    
    inline ::System::Void NewDataSet::animation_sequenceRow::Setanimation_state_IdNull() {
        this[this->tableanimation_sequence->animation_state_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< BB_Crash::NewDataSet::poseRow^  >^  NewDataSet::animation_sequenceRow::GetposeRows() {
        if (this->Table->ChildRelations[L"animation_sequence_pose"] == nullptr) {
            return gcnew cli::array< BB_Crash::NewDataSet::poseRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< BB_Crash::NewDataSet::poseRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"animation_sequence_pose"])));
        }
    }
    
    
    inline NewDataSet::poseRow::poseRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tablepose = (cli::safe_cast<BB_Crash::NewDataSet::poseDataTable^  >(this->Table));
    }
    
    inline System::UInt64 NewDataSet::poseRow::image_id::get() {
        try {
            return (cli::safe_cast<::System::UInt64 >(this[this->tablepose->image_idColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'image_id\' in table \'pose\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::poseRow::image_id::set(System::UInt64 value) {
        this[this->tablepose->image_idColumn] = value;
    }
    
    inline System::UInt64 NewDataSet::poseRow::duration::get() {
        try {
            return (cli::safe_cast<::System::UInt64 >(this[this->tablepose->durationColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'duration\' in table \'pose\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::poseRow::duration::set(System::UInt64 value) {
        this[this->tablepose->durationColumn] = value;
    }
    
    inline System::Int32 NewDataSet::poseRow::animation_sequence_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tablepose->animation_sequence_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'animation_sequence_Id\' in table \'pose\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::poseRow::animation_sequence_Id::set(System::Int32 value) {
        this[this->tablepose->animation_sequence_IdColumn] = value;
    }
    
    inline BB_Crash::NewDataSet::animation_sequenceRow^  NewDataSet::poseRow::animation_sequenceRow::get() {
        return (cli::safe_cast<BB_Crash::NewDataSet::animation_sequenceRow^  >(this->GetParentRow(this->Table->ParentRelations[L"animation_sequence_pose"])));
    }
    inline System::Void NewDataSet::poseRow::animation_sequenceRow::set(BB_Crash::NewDataSet::animation_sequenceRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"animation_sequence_pose"]);
    }
    
    inline ::System::Boolean NewDataSet::poseRow::Isimage_idNull() {
        return this->IsNull(this->tablepose->image_idColumn);
    }
    
    inline ::System::Void NewDataSet::poseRow::Setimage_idNull() {
        this[this->tablepose->image_idColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::poseRow::IsdurationNull() {
        return this->IsNull(this->tablepose->durationColumn);
    }
    
    inline ::System::Void NewDataSet::poseRow::SetdurationNull() {
        this[this->tablepose->durationColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::poseRow::Isanimation_sequence_IdNull() {
        return this->IsNull(this->tablepose->animation_sequence_IdColumn);
    }
    
    inline ::System::Void NewDataSet::poseRow::Setanimation_sequence_IdNull() {
        this[this->tablepose->animation_sequence_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::sprite_typeRowChangeEvent::sprite_typeRowChangeEvent(BB_Crash::NewDataSet::sprite_typeRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline BB_Crash::NewDataSet::sprite_typeRow^  NewDataSet::sprite_typeRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::sprite_typeRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::images_listRowChangeEvent::images_listRowChangeEvent(BB_Crash::NewDataSet::images_listRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline BB_Crash::NewDataSet::images_listRow^  NewDataSet::images_listRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::images_listRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::image_fileRowChangeEvent::image_fileRowChangeEvent(BB_Crash::NewDataSet::image_fileRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline BB_Crash::NewDataSet::image_fileRow^  NewDataSet::image_fileRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::image_fileRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::animations_listRowChangeEvent::animations_listRowChangeEvent(BB_Crash::NewDataSet::animations_listRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline BB_Crash::NewDataSet::animations_listRow^  NewDataSet::animations_listRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::animations_listRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::animation_stateRowChangeEvent::animation_stateRowChangeEvent(BB_Crash::NewDataSet::animation_stateRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline BB_Crash::NewDataSet::animation_stateRow^  NewDataSet::animation_stateRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::animation_stateRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::animation_sequenceRowChangeEvent::animation_sequenceRowChangeEvent(BB_Crash::NewDataSet::animation_sequenceRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline BB_Crash::NewDataSet::animation_sequenceRow^  NewDataSet::animation_sequenceRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::animation_sequenceRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::poseRowChangeEvent::poseRowChangeEvent(BB_Crash::NewDataSet::poseRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline BB_Crash::NewDataSet::poseRow^  NewDataSet::poseRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::poseRowChangeEvent::Action::get() {
        return this->eventAction;
    }
}
